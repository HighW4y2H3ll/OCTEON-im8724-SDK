This is ../../../src/ddd/ddd/ddd.info, produced by makeinfo version
4.13 from ../../../src/ddd/ddd/ddd.texi.

INFO-DIR-SECTION Programming & development tools.
START-INFO-DIR-ENTRY
* DDD: (ddd).                     The Data Display Debugger.
END-INFO-DIR-ENTRY

DDD is a graphical front-end for GDB and other command-line debuggers.

This is the First Edition, 15 January, 2004, of `Debugging with DDD'
for DDD Version 3.3.11.


   Copyright (C) 2004 Universität des Saarlandes
Lehrstuhl Softwaretechnik
Postfach 15 11 50
66041 Saarbrücken
GERMANY

Distributed by
Free Software Foundation, Inc.
59 Temple Place - Suite 330
Boston, MA 02111-1307
USA

DDD and this manual are available via the DDD WWW page
(http://www.gnu.org/software/ddd/).

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, no Front-Cover Texts and no Back-Cover Texts.  A
copy of the license is included in the section entitled "GNU Free
Documentation License".

   Send questions, comments, suggestions, etc. to <ddd@gnu.org>.
Send bug reports to <bug-ddd@gnu.org>.

File: ddd.info,  Node: Examining Memory,  Prev: Plotting Values,  Up: Examining Data

7.5 Examining Memory
====================

Using GDB or DBX, you can examine memory in any of several formats,
independently of your program's data types.  The item `Data => Memory'
pops up a panel where you can choose the format to be shown.

   In the panel, you can enter

   * a "repeat count", a decimal integer that specifies how much memory
     (counting by units) to display

   * a "display format"--one of

    `octal'
          Print as integer in octal

    `hex'
          Regard the bits of the value as an integer, and print the
          integer in hexadecimal.

    `decimal'
          Print as integer in signed decimal.

    `unsigned'
          Print as integer in unsigned decimal.

    `binary'
          Print as integer in binary.

    `float'
          Regard the bits of the value as a floating point number and
          print using typical floating point syntax.

    `address'
          Print as an address, both absolute in hexadecimal and as an
          offset from the nearest preceding symbol.

    `instruction'
          Print as machine instructions.  The unit size is ignored for
          this display format.

    `char'
          Regard as an integer and print it as a character constant.

    `string'
          Print as null-terminated string.  The unit size is ignored
          for this display format.

   * a "unit size"--one of

    `bytes'
          Bytes.

    `halfwords'
          Halfwords (two bytes).

    `words'
          Words (four bytes).

    `giants'
          Giant words (eight bytes).

   * an "address"--the starting display address.  The expression need
     not have a pointer value (though it may); it is always interpreted
     as an integer address of a byte of memory.

   There are two ways to examine the values:

   * You can dump the memory in the debugger console (using `Print').
     If you repeat the resulting `x' command by pressing <Return> in
     the debugger console (*note Command History::), the following area
     of memory is shown.

   * You can also display the memory dump in the data window (using
     `Display').  If you choose to display the values, the values will
     be updated automatically each time the program stop.


File: ddd.info,  Node: Machine-Level Debugging,  Next: Changing the Program,  Prev: Examining Data,  Up: Top

8 Machine-Level Debugging
*************************

Sometimes, it is desirable to examine a program not only at the source
level, but also at the machine level.  DDD provides special machine
code and register windows for this task.

* Menu:

* Machine Code::                Examining machine code.
* Machine Code Execution::      Stepping across instructions.
* Registers::                   Examining registers.
* Customizing Machine Code::    Settings.


File: ddd.info,  Node: Machine Code,  Next: Machine Code Execution,  Up: Machine-Level Debugging

8.1 Examining Machine Code
==========================

To enable machine-level support, select `Source => Display Machine
Code'.  With machine code enabled, an additional _machine code window_
shows up, displaying the machine code of the current function.(1)  By
moving the sash at the right of the separating line between source and
machine code, you can resize the source and machine code windows.

   The machine code window works very much like the source window.  You
can set, clear, and change breakpoints by selecting the address and
pressing a `Break' or `Clear' button; the usual popup menus are also
available.  Breakpoints and the current execution position are displayed
simultaneously in both source and machine code.

   The `Lookup' button can be used to look up the machine code for a
specific function--or the function for a specific address.  Just click
on the location in one window and press `Lookup' to see the
corresponding code in the other window.

   If source code is not available, only the machine code window is
updated.

   You can customize various aspects of the disassembling window.
*Note Customizing Machine Code::, for details.

   ---------- Footnotes ----------

   (1) The machine code window is available with GDB and some DBX
variants only.


File: ddd.info,  Node: Machine Code Execution,  Next: Registers,  Prev: Machine Code,  Up: Machine-Level Debugging

8.2 Machine Code Execution
==========================

All execution facilities available in the source code window are
available in the machine code window as well.  Two special facilities
are convenient for machine-level debugging:

   To execute just one machine instruction, click on the `Stepi' button
or select `Program => Step Instruction'.

   To continue to the next instruction in the current function, click on
the `Nexti' button select `Program => Next Instruction'..  This is
similar to `Stepi', but any subroutine calls are executed without
stopping.

   Using GDB, it is often useful to do

     graph display /i $pc

when stepping by machine instructions.  This makes DDD automatically
display the next instruction to be executed, each time your program
stops.


File: ddd.info,  Node: Registers,  Next: Customizing Machine Code,  Prev: Machine Code Execution,  Up: Machine-Level Debugging

8.3 Examining Registers
=======================

DDD provides a _register window_ showing the machine register values
after each program stop.  To enable the register window, select `Status
=> Registers'.(1)

   By selecting one of the registers, its name is copied to the argument
field.  You can use it as value for `Display', for instance, to have
its value displayed in the data window.

   ---------- Footnotes ----------

   (1) The machine code window is available with GDB and some DBX
variants only.


File: ddd.info,  Node: Customizing Machine Code,  Prev: Registers,  Up: Machine-Level Debugging

8.4 Customizing Machine Code
============================

Enabling machine code via `Source => Display Machine Code' (*note
Machine Code::) toggles the following resource:

 -- Resource: disassemble (class Disassemble)
     If this is `on', the source code is automatically disassembled.
     The default is `off'.  *Note Options::, for the `--disassemble'
     and `--no-disassemble' options.

   You can keep disassembled code in memory, using `Edit => Preferences
=> Source => Cache Machine Code':

 -- Resource: cacheMachineCode (class CacheMachineCode)
     Whether to cache disassembled machine code (`on', default) or not
     (`off').  Caching machine code requires more memory, but makes DDD
     run faster.

   You can control the indentation of machine code, using `Edit =>
Preferences => Source => Machine Code Indentation':

 -- Resource: indentCode (class Indent)
     The number of columns to indent the machine code, such that there
     is enough place to display breakpoint locations.  Default: `4'.

   The `maxDisassemble' resource controls how much is to be
disassembled.  If `maxDisassemble' is set to 256 (default) and the
current function is larger than 256 bytes, DDD only disassembles the
first 256 bytes below the current location.  You can set the
`maxDisassemble' resource to a larger value if you prefer to have a
larger machine code view.

 -- Resource: maxDisassemble (class MaxDisassemble)
     Maximum number of bytes to disassemble (default: `256').  If this
     is zero, the entire current function is disassembled.


File: ddd.info,  Node: Changing the Program,  Next: Commands,  Prev: Machine-Level Debugging,  Up: Top

9 Changing the Program
**********************

DDD offers some basic facilities to edit and recompile the source code,
as well as patching executables and core files.

* Menu:

* Editing Source Code::         You can invoke a source editor from DDD.
* Recompiling::                 Invoking `make' from within DDD.
* Patching::                    Changing source and object code.


File: ddd.info,  Node: Editing Source Code,  Next: Recompiling,  Up: Changing the Program

9.1 Editing Source Code
=======================

In DDD itself, you cannot change the source file currently displayed.
Instead, DDD allows you to invoke a _text editor_.  To invoke a text
editor for the current source file, select the `Edit' button or `Source
=> Edit Source'.

   By default, DDD tries a number of common editors.  You can customize
DDD to use your favorite editor; *Note Customizing Editing::, for
details.

   After the editor has exited, the source code shown is automatically
updated.

   If you have DDD and an editor running in parallel, you can also
update the source code manually via `Source => Reload Source'.  This
reloads the source code shown from the source file.  Since DDD
automatically reloads the source code if the debugged program has been
recompiled, this should seldom be necessary.

* Menu:

* Customizing Editing::
* In-Place Editing::


File: ddd.info,  Node: Customizing Editing,  Next: In-Place Editing,  Up: Editing Source Code

9.1.1 Customizing Editing
-------------------------

You can customize the editor to be used via `Edit => Preferences =>
Helpers => Edit Sources'.  This is tied to the following resource:

 -- Resource: editCommand (class EditCommand)
     A command string to invoke an editor on the specific file.
     `@LINE@' is replaced by the current line number, `@FILE@' by the
     file name.  The default is to invoke `$XEDITOR' first, then
     `$EDITOR', then `vi':

          Ddd*editCommand: \
          ${XEDITOR-false} +@LINE@ @FILE@ || \
          xterm -e ${EDITOR-vi} +@LINE@ @FILE@

   This `~/.ddd/init' setting invokes an editing session for an XEmacs
editor running `gnuserv':

     Ddd*editCommand: gnuclient +@LINE@ @FILE@

   This `~/.ddd/init' setting invokes an editing session for an Emacs
editor running `emacsserver':

     Ddd*editCommand: emacsclient +@LINE@ @FILE@


File: ddd.info,  Node: In-Place Editing,  Prev: Customizing Editing,  Up: Editing Source Code

9.1.2 In-Place Editing
----------------------

This resource is experimental:

 -- Resource: sourceEditing (class SourceEditing)
     If this is `on', the displayed source code becomes editable.  This
     is an experimental feature; Default is `off'.


File: ddd.info,  Node: Recompiling,  Next: Patching,  Prev: Editing Source Code,  Up: Changing the Program

9.2 Recompiling
===============

To recompile the source code using `make', you can select `File =>
Make'.  This pops up a dialog where you can enter a _Make
Target_--typically the name of the executable.  Clicking on the `Make'
button invokes the `make' program with the given target.

   The `Make' button on the command tool re-invokes `make' with the
most recently given arguments.


File: ddd.info,  Node: Patching,  Prev: Recompiling,  Up: Changing the Program

9.3 Patching
============

Using GDB, you can open your program's executable code (and the core
file) for both reading and writing.  This allows alterations to machine
code, such that you can intentionally patch your program's binary.  For
example, you might want to turn on internal debugging flags, or even to
make emergency repairs.

   Note that depending on your operating system, special preparation
steps, such as setting permissions, may be needed before you can change
executable files.

   To patch the binary, enable `Edit => GDB Settings => Writing into
executable and core files'.  This makes GDB open executable and core
files for both reading and writing.  If you have already loaded a file,
you must load it again (using `Edit => Open File' or `Edit => Open
Core'), for your new setting to take effect.

   Be sure to turn off `Writing into executable and core files' as soon
as possible, to prevent accidental alterations to machine code.


File: ddd.info,  Node: Commands,  Next: Application Defaults,  Prev: Changing the Program,  Up: Top

10 The Command-Line Interface
*****************************

All the buttons you click within DDD get eventually translated into
some debugger command, shown in the debugger console.  You can also
type in and edit these commands directly.

* Menu:

* Entering Commands::           Direct interaction with the inferior debugger.
* TTY mode::                    Controlling DDD from a terminal.
* Integrating DDD::          DDD and your programming environment.
* Defining Buttons::            Add your own DDD buttons.
* Defining Commands::           Add your own DDD commands.


File: ddd.info,  Node: Entering Commands,  Next: TTY mode,  Up: Commands

10.1 Entering Commands
======================

In the _debugger console_, you can interact with the command interface
of the inferior debugger.  Enter commands at the _debugger
prompt_--that is, `(gdb)' for GDB, `(dbx)' for DBX, `(ladebug)' for
Ladebug, `>' for XDB, `>' and `THREAD[DEPTH]' for JDB, or `(Pydb)' for
PYDB, or `DB<>' for Perl, or `bashdb<>' for Bash.  You can use
arbitrary debugger commands; use the <Return> key to enter them.

* Menu:

* Command Completion::          Using the <TAB> key.
* Command History::             Repeating previous commands.
* Typing in the Source Window::


File: ddd.info,  Node: Command Completion,  Next: Command History,  Up: Entering Commands

10.1.1 Command Completion
-------------------------

When using GDB or Perl, you can use the <TAB> key for _completing_
commands and arguments.  This works in the debugger console as well as
in all other text windows.

   GDB can fill in the rest of a word in a command for you, if there is
only one possibility; it can also show you what the valid possibilities
are for the next word in a command, at any time.  This works for GDB
commands, GDB subcommands, and the names of symbols in your program.

   Press the <TAB> key whenever you want GDB to fill out the rest of a
word.  If there is only one possibility, GDB fills in the word, and
waits for you to finish the command (or press <RET> to enter it).  For
example, if you type
     (gdb) info bre_<TAB>

GDB fills in the rest of the word `breakpoints', since that is the only
`info' subcommand beginning with `bre':

     (gdb) info breakpoints

You can either press <RET> at this point, to run the `info breakpoints'
command, or backspace and enter something else, if `breakpoints' does
not look like the command you expected.  (If you were sure you wanted
`info breakpoints' in the first place, you might as well just type
<RET> immediately after `info bre', to exploit command abbreviations
rather than command completion).

   If there is more than one possibility for the next word when you
press <TAB>, DDD sounds a bell.  You can either supply more characters
and try again, or just press <TAB> a second time; GDB displays all the
possible completions for that word.  For example, you might want to set
a breakpoint on a subroutine whose name begins with `make_', but when
you type `b make_<TAB>', DDD just sounds the bell.  Typing <TAB> again
displays all the function names in your program that begin with those
characters.  If you type <TAB> again, you cycle through the list of
completions, for example:

     (gdb) b make_ <TAB>
DDD sounds bell; press <TAB> again, to see:
     make_a_section_from_file     make_environ
     make_abs_section             make_function_type
     make_blockvector             make_pointer_type
     make_cleanup                 make_reference_type
     make_command                 make_symbol_completion_list
     (gdb) b make_ <TAB>
DDD presents one expansion after the other:
     (gdb) b make_a_section_from_file <TAB>
     (gdb) b make_abs_section <TAB>
     (gdb) b make_blockvector <TAB>

After displaying the available possibilities, GDB copies your partial
input (`b make_' in the example) so you can finish the command--by
pressing <TAB> again, or by entering the remainder manually.

   Sometimes the string you need, while logically a "word", may contain
parentheses or other characters that GDB normally excludes from its
notion of a word.  To permit word completion to work in this situation,
you may enclose words in `'' (single quote marks) in GDB commands.

   The most likely situation where you might need this is in typing the
name of a C++ function.  This is because C++ allows function overloading
(multiple definitions of the same function, distinguished by argument
type).  For example, when you want to set a breakpoint you may need to
distinguish whether you mean the version of `name' that takes an `int'
parameter, `name(int)', or the version that takes a `float' parameter,
`name(float)'.  To use the word-completion facilities in this
situation, type a single quote `'' at the beginning of the function
name.  This alerts GDB that it may need to consider more information
than usual when you press <TAB> to request word completion:

     (gdb) b 'bubble(_<TAB>
     bubble(double,double)    bubble(int,int)
     (gdb) b 'bubble(_

   In some cases, DDD can tell that completing a name requires using
quotes.  When this happens, DDD inserts the quote for you (while
completing as much as it can) if you do not type the quote in the first
place:

     (gdb) b bub_<TAB>
DDD alters your input line to the following, and rings a bell:
     (gdb) b 'bubble(_

In general, DDD can tell that a quote is needed (and inserts it) if you
have not yet started typing the argument list when you ask for
completion on an overloaded symbol.

   If you prefer to use the <TAB> key for switching between items,
unset `Edit => Preferences => General => TAB Key completes in All
Windows'.  This is useful if you have pointer-driven keyboard focus
(see below) and no special usage for the <TAB> key.  If the option is
set, the <TAB> key completes in the debugger console only.

   This option is tied to the following resource:

 -- Resource: globalTabCompletion (class GlobalTabCompletion)
     If this is `on' (default), the <TAB> key completes arguments in
     all windows.  If this is `off', the <TAB> key completes arguments
     in the debugger console only.


File: ddd.info,  Node: Command History,  Next: Typing in the Source Window,  Prev: Command Completion,  Up: Entering Commands

10.1.2 Command History
----------------------

You can _repeat_ previous and next commands by pressing the <Up> and
<Down> arrow keys, respectively.  This presents you previous and later
commands on the command line; use <Return> to apply the current command.

   If you enter an empty line (just use <Return> at the debugger
prompt), the last command is repeated as well.

   `Commands => Command History' shows the command history.

   You can _search_ for previous commands by pressing <Ctrl+B>.  This
invokes _incremental search mode,_ where you can enter a string to be
searched in previous commands.  Press <Ctrl+B> again to repeat the
search, or <Ctrl+F> to search in the reverse direction.  To return to
normal mode, press <ESC>, or use any cursor command.

   The command history is automatically saved when exiting DDD.  You
can turn off this feature by setting the following resource to `off':

 -- Resource: saveHistoryOnExit (class SaveOnExit)
     If `on' (default), the command history is automatically saved when
     DDD exits.


File: ddd.info,  Node: Typing in the Source Window,  Prev: Command History,  Up: Entering Commands

10.1.3 Typing in the Source Window
----------------------------------

As a special convenience, anything you type into the source window is
automatically forwarded to the debugger console.  Thus, you don't have
to change the keyboard focus explicitly in order to enter commands.

   You can change this behaviour using the following resource:

 -- Resource: consoleHasFocus (class ConsoleHasFocus)
     If `on' (default), all keyboard events in the source window are
     automatically forwarded to the debugger console.  If `off',
     keyboard events are not forwarded.  If `auto', keyboard events
     forwarded only if the debugger console is open.


File: ddd.info,  Node: TTY mode,  Next: Integrating DDD,  Prev: Entering Commands,  Up: Commands

10.2 Entering Commands at the TTY
=================================

Rather than entering commands at the debugger console, you may prefer to
enter commands at the terminal window DDD was invoked from.

   When DDD is invoked using the `--tty' option, it enables its _TTY
interface_, taking additional debugger commands from standard input and
forwarding debugger output to standard output, just as if the inferior
debugger had been invoked directly.  All remaining DDD functionality
stays unchanged.

   By default, the debugger console remains closed if DDD is invoked
using the `--tty' option.  Use `View => Debugger Console' to open it.

   DDD can be configured to use the `readline' library for reading in
commands from standard input.  This GNU library provides consistent
behavior for programs which provide a command line interface to the
user.  Advantages are GNU Emacs-style or "vi"-style inline editing of
commands, `csh'-like history substitution, and a storage and recall of
command history across debugging sessions.  *Note Command Line Editing:
(gdb)Command Line Editing, for details on command-line editing via the
TTY interface.


File: ddd.info,  Node: Integrating DDD,  Next: Defining Buttons,  Prev: TTY mode,  Up: Commands

10.3 Integrating DDD
====================

You can run DDD as an inferior debugger in other debugger front-ends,
combining their special abilities with those of DDD.

   To have DDD run as an inferior debugger in other front-ends, the
general idea is to set up your debugger front-end such that `ddd --tty'
is invoked instead of the inferior debugger.  When DDD is invoked using
the `--tty' option, it enables its _TTY interface_, taking additional
debugger commands from standard input and forwarding debugger output to
standard output, just as if the inferior debugger had been invoked
directly.  All remaining DDD functionality stays unchanged.

   In case your debugger front-end uses the GDB `-fullname' option to
have GDB report source code positions, the `--tty' option is not
required.  DDD recognizes the `-fullname' option, finds that it has
been invoked from a debugger front-end and automatically enables the
TTY interface.

   If DDD is invoked with the `-fullname' option, the debugger console
and the source window are initially disabled, as their facilities are
supposed to be provided by the integrating front-end.  In case of need,
you can use the `View' menu to re-enable these windows.

10.3.1 Using DDD with Emacs
---------------------------

To integrate DDD with Emacs, use `M-x gdb' or `M-x dbx' in Emacs to
start a debugging session.  At the prompt, enter `ddd --tty' (followed
by `--dbx' or `--gdb', if required), and the name of the program to be
debugged.  Proceed as usual.

10.3.2 Using DDD with XEmacs
----------------------------

To integrate DDD with XEmacs, set the variable `gdb-command-name' to
`"ddd"', by inserting the following line in your `~/.emacs' file:

     (setq gdb-command-name "ddd")

   You can also evaluate this expression by pressing <ESC> <:> and
entering it directly (<ESC> <ESC> for XEmacs 19.13 and earlier).

   To start a DDD debugging session in XEmacs, use `M-x gdb' or `M-x
gdbsrc'.  Proceed as usual.

10.3.3 Using DDD with XXGDB
---------------------------

To integrate DDD with XXGDB, invoke `xxgdb' as

     xxgdb -db_name ddd -db_prompt '(gdb) '


File: ddd.info,  Node: Defining Buttons,  Next: Defining Commands,  Prev: Integrating DDD,  Up: Commands

10.4 Defining Buttons
=====================

To facilitate interaction, you can add own command buttons to DDD.
These buttons can be added below the debugger console (`Console
Buttons'), the source window (`Source Buttons'), or the data window
(`Data Buttons').

   To define individual buttons, use the _Button Editor_, invoked via
`Commands => Edit Buttons'.  The button editor displays a text, where
each line contains the command for exactly one button.  Clicking on
`OK' creates the appropriate buttons from the text.  If the text is
empty (the default), no button is created.

   As a simple example, assume you want to create a `print i' button.
Invoke `Commands => Edit Buttons' and enter a line saying `print i' in
the button editor.  Then click on `OK'.  A button named `Print i' will
now appear below the debugger console--try it!  To remove the button,
reopen the button editor, clear the `print i' line and press `OK' again.

   If a button command contains `()', the string `()' will
automatically be replaced by the contents of the argument field.  For
instance, a button named `return ()' will execute the GDB `return'
command with the current content of the argument field as argument.

   By default, DDD disables buttons whose commands are not supported by
the inferior debugger.  To enable such buttons, unset the `Enable
supported buttons only' toggle in the button editor.

   DDD also allows you to specify control sequences and special labels
for user-defined buttons.  *Note Customizing Buttons::, for details.

* Menu:

* Customizing Buttons::         Adding your own command buttons.


File: ddd.info,  Node: Customizing Buttons,  Up: Defining Buttons

10.4.1 Customizing Buttons
--------------------------

DDD allows defining additional command buttons; *Note Defining
Buttons::, for doing this interactively.  This section describes the
resources that control user-defined buttons.

 -- Resource: consoleButtons (class Buttons)
     A newline-separated list of buttons to be added under the debugger
     console.  Each button issues the command given by its name.

     The following characters have special meanings:
        * Commands ending with `...' insert their name, followed by a
          space, in the debugger console.

        * Commands ending with a control character (that is, `^'
          followed by a letter or `?') insert the given control
          character.

        * The string `()' is replaced by the current contents of the
          argument field `()'.

        * The string specified in the `labelDelimiter' resource (usually
          `//') separates the command name from the button label.  If no
          button label is specified, the capitalized command will be
          used as button label.

     The following button names are reserved:

    `Apply'
          Send the given command to the debugger.

    `Back'
          Lookup previously selected source position.

    `Clear'
          Clear current command

    `Complete'
          Complete current command.

    `Edit'
          Edit current source file.

    `Forward'
          Lookup next selected source position.

    `Make'
          Invoke the `make' program, using the most recently given
          arguments.

    `Next'
          Show next command

    `No'
          Answer current debugger prompt with `no'.  This button is
          visible only if the debugger asks a yes/no question.

    `Prev'
          Show previous command

    `Reload'
          Reload source file.

    `Yes'
          Answer current debugger prompt with `yes'.  This button is
          visible only if the debugger asks a yes/no question.

     The default resource value is empty--no console buttons are
     created.

     Here are some examples to insert into your `~/.ddd/init' file.
     These are the settings of DDD 1.x:
          Ddd*consoleButtons: Yes\nNo\nbreak^C

     This setting creates some more buttons:
            Ddd*consoleButtons: \
            Yes\nNo\nrun\nClear\nPrev\nNext\nApply\nbreak^C

     See also the `dataButtons', `sourceButtons' and `toolButtons'
     resources.

 -- Resource: dataButtons (class Buttons)
     A newline-separated list of buttons to be added under the data
     display.  Each button issues the command given by its name.  See
     the `consoleButtons' resource, above, for details on button syntax.

     The default resource value is empty--no source buttons are created.

 -- Resource: sourceButtons (class Buttons)
     A newline-separated list of buttons to be added under the debugger
     console.  Each button issues the command given by its name.  See
     the `consoleButtons' resource, above, for details on button syntax.

     The default resource value is empty--no source buttons are created.

     Here are some example to insert into your `~/.ddd/init' file.
     These are the settings of DDD 1.x:

          Ddd*sourceButtons: \
            run\nstep\nnext\nstepi\nnexti\ncont\n\
            finish\nkill\nup\ndown\n\
            Back\nForward\nEdit\ninterrupt^C

     This setting creates some buttons which are not found on the
     command tool:

            Ddd*sourceButtons: \
            print *()\ngraph display *()\nprint /x ()\n\
            whatis ()\nptype ()\nwatch ()\nuntil\nshell

     An even more professional setting uses customized button labels.

            Ddd*sourceButtons: \
            print *(()) // Print *()\n\
            graph display *(()) // Display *()\n\
            print /x ()\n\
            whatis () // What is ()\n\
            ptype ()\n\
            watch ()\n\
            until\n\
            shell

     See also the `consoleButtons' and `dataButtons' resources, above,
     and the `toolButtons' resource, below.

 -- Resource: toolButtons (class Buttons)
     A newline-separated list of buttons to be included in the command
     tool or the command tool bar (*note Disabling the Command Tool::).
     Each button issues the command given by its name.  *Note Defining
     Buttons::, for details on button syntax.

     The default resource value is

          Ddd*toolButtons: \
          run\nbreak^C\nstep\nstepi\nnext\nnexti\n\
          until\nfinish\ncont\n\kill\n\
          up\ndown\nBack\nForward\nEdit\nMake

     For each button, its location in the command tool must be specified
     using `XmForm' constraint resources.  See the `Ddd' application
     defaults file for instructions.

     If the `toolButtons' resource value is empty, the command tool is
     not created.

   The following resources set up button details:

 -- Resource: labelDelimiter (class LabelDelimiter)
     The string used to separate labels from commands and shortcuts.
     Default is `//'.

 -- Resource: verifyButtons (class VerifyButtons)
     If `on' (default), verify for each button whether its command is
     actually supported by the inferior debugger.  If the command is
     unknown, the button is disabled.  If this resource is `off', no
     checking is done: all commands are accepted "as is".


File: ddd.info,  Node: Defining Commands,  Prev: Defining Buttons,  Up: Commands

10.5 Defining Commands
======================

Aside from breakpoint commands (*note Breakpoint Commands::), DDD also
allows you to define user-defined commands.  A _user-defined command_
is a sequence of commands to which you assign a new name as a command.
This new command can be entered at the debugger prompt or invoked via a
button.

* Menu:

* GDB Simple Commands::
* GDB Argument Commands::
* Commands with Other Debuggers::


File: ddd.info,  Node: GDB Simple Commands,  Next: GDB Argument Commands,  Up: Defining Commands

10.5.1 Defining Simple Commands using GDB
-----------------------------------------

Aside from breakpoint commands (see `Breakpoint commands', above), DDD
also allows you to store sequences of commands as a user-defined GDB
command.  A _user-defined command_ is a sequence of GDB commands to
which you assign a new name as a command.  Using DDD, this is done via
the _Command Editor_, invoked via `Commands => Define Command'.

   A GDB command is created in five steps:

  1. Enter the name of the command in the `Command' field.  Use the
     drop-down list on the right to select from already defined
     commands.

  2. Click on `Record' to begin the recording of the command sequence.

  3. Now interact with DDD.  While recording, DDD does not execute
     commands, but simply records them to be executed when the
     breakpoint is hit.  The recorded debugger commands are shown in the
     debugger console.

  4. To stop the recording, click on `End' or enter `end' at the GDB
     prompt.  To _cancel_ the recording, click on `Interrupt' or press
     <ESC>.

  5. Click on `Edit >>' to edit the recorded commands.  When done with
     editing, click on `Edit <<' to close the commands editor.

   After the command is defined, you can enter it at the GDB prompt.
You may also click on `Execute' to test the given user-defined command.

   For convenience, you can assign a button to the defined command.
Enabling one of the `Button' locations will add a button with the given
command to the specified location.  If you want to edit the button,
select `Commands => Edit Buttons'.  *Note Defining Buttons::, for a
discussion.

   When user-defined GDB commands are executed, the commands of the
definition are not printed.  An error in any command stops execution of
the user-defined command.(1)

   If used interactively, commands that would ask for confirmation
proceed without asking when used inside a user-defined command.  Many
GDB commands that normally print messages to say what they are doing
omit the messages when used in a user-defined command.

   Command definitions are saved across DDD sessions.

   ---------- Footnotes ----------

   (1) If you use DDD commands within command definitions, or if you
include debugger commands that resume execution, these commands will be
realized transparently as "auto-commands"--that is, they won't be
executed directly by the inferior debugger, but result in a command
string being sent to DDD.  This command string is then interpreted by
DDD and sent back to the inferior debugger, possibly prefixed by some
other commands such that DDD can update its state.  *Note Commands with
Other Debuggers::, for a discussion.


File: ddd.info,  Node: GDB Argument Commands,  Next: Commands with Other Debuggers,  Prev: GDB Simple Commands,  Up: Defining Commands

10.5.2 Defining Argument Commands using GDB
-------------------------------------------

If you want to pass arguments to user-defined commands, you can enable
the `()' toggle button in the Command Editor.  Enabling `()' has two
effects:

   * While recording commands, all references to the argument field are
     taken _symbolically_ instead of literally.  The argument field
     value is frozen to `$arg0', which is how GDB denotes the argument
     of a user-defined command.  When GDB executes the command, it will
     replace `$arg0' by the current command argument.

   * When assigning a button to the command, the command will be
     suffixed by the current contents of the argument field.

   While defining a command, you can toggle the `()' button as you wish
to switch between using the argument field symbolically and literally.

   As an example, let us define a command `contuntil' that will set a
breakpoint in the given argument and continue execution.

  1. Enter `contuntil' in the `Command' field.

  2. Enable the `()' toggle button.

  3. Now click on `Record' to start recording.  Note that the contents
     of the argument field change to `$arg0'.

  4. Click on `Break at ()' to create a breakpoint.  Note that the
     recorded breakpoint command refers to `$arg0'.

  5. Click on `Cont' to continue execution.

  6. Click on `End' to end recording.  Note that the argument field is
     restored to its original value.

  7. Finally, click on one of the `Button' locations.  This creates a
     `Contuntil ()' button where `()' will be replaced by the current
     contents of the argument field--and thus passed to the `contuntil'
     command.

  8. You can now either use the `Contuntil ()' button or enter a
     `contuntil' command at the GDB prompt.  (If you plan to use the
     command frequently, you may wish to define a `cu' command, which
     again calls `contuntil' with its argument.  This is a nice
     exercise.)

   There is a little drawback with argument commands: a user-defined
command in GDB has no means to access the argument list as a whole; only
the first argument (up to whitespace) is processed.  This may change in
future GDB releases.


File: ddd.info,  Node: Commands with Other Debuggers,  Prev: GDB Argument Commands,  Up: Defining Commands

10.5.3 Defining Commands using Other Debuggers
----------------------------------------------

If your inferior debugger allows you to define own command sequences,
you can also use these user-defined commands within DDD; just enter
them at the debugger prompt.

   However, you may encounter some problems:

   * In contrast to the well-documented commands of the inferior
     debugger, DDD does not know what a user-defined command does.
     This may lead to inconsistencies between DDD and the inferior
     debugger.  For instance, if your the user-defined command `bp'
     sets a breakpoint, DDD may not display it immediately, because DDD
     does not know that `bp' changes the breakpoint state.

   * You cannot use DDD `graph' commands within user-defined commands.
     This is only natural, because user-defined commands are
     interpreted by the inferior debugger, which does not know about
     DDD commands.

   As a solution, DDD provides a simple facility called
"auto-commands".  If DDD receives any output from the inferior debugger
in the form `PREFIX COMMAND', it will interpret COMMAND as if it had
been entered at the debugger prompt.  PREFIX is a user-defined string,
for example `ddd: '.

   Suppose you want to define a command `gd' that serves as
abbreviation for `graph display'.  All the command `gd' has to do is to
issue a string

     ddd: graph display ARGUMENT

   where ARGUMENT is the argument given to `gd'.  Using GDB, this can
be achieved using the `echo' command.  In your `~/.gdbinit' file,
insert the lines

     define gd
       echo ddd: graph display $arg0\n
     end

   To complete the setting, you must also set the `autoCommandPrefix'
resource to the `ddd: ' prefix you gave in your command.  In
`~/.ddd/init', write:

     Ddd*autoCommandPrefix: ddd:\

(Be sure to leave a space after the trailing backslash.)

   Entering `gd foo' will now have the same effect as entering `graph
display foo' at the debugger prompt.

   Please note: In your commands, you should choose some other prefix
than `ddd: '.  This is because auto-commands raise a security problem,
since arbitrary commands can be executed.  Just imagine some malicious
program issuing a string like `PREFIX shell rm -fr ~' when being
debugged!  As a consequence, be sure to choose your own PREFIX; it must
be at least three characters long.


File: ddd.info,  Node: Application Defaults,  Next: Bugs,  Prev: Commands,  Up: Top

Appendix A Application Defaults
*******************************

Like any good X citizen, DDD comes with a large application-defaults
file named `Ddd'.  This appendix documents the actions and images
referenced in `Ddd', such that you can easily modify them.

* Menu:

* Actions::                     All actions used in translation tables.
* Images::                      All images used in resources,


File: ddd.info,  Node: Actions,  Next: Images,  Up: Application Defaults

A.1 Actions
===========

The following DDD actions may be used in translation tables.

* Menu:

* General Actions::
* Data Display Actions::
* Debugger Console Actions::
* Source Window Actions::


File: ddd.info,  Node: General Actions,  Next: Data Display Actions,  Up: Actions

A.1.1 General Actions
---------------------

 -- Action: ddd-get-focus ()
     Assign focus to the element that just received input.

 -- Action: ddd-next-tab-group ()
     Assign focus to the next tab group.

 -- Action: ddd-prev-tab-group ()
     Assign focus to the previous tab group.

 -- Action: ddd-previous-tab-group ()
     Assign focus to the previous tab group.


File: ddd.info,  Node: Data Display Actions,  Next: Debugger Console Actions,  Prev: General Actions,  Up: Actions

A.1.2 Data Display Actions
--------------------------

These actions are used in the DDD graph editor.

 -- Action: end ()
     End the action initiated by `select'.  Bound to a button up event.

 -- Action: extend ()
     Extend the current selection.  Bound to a button down event.

 -- Action: extend-or-move ()
     Extend the current selection.  Bound to a button down event.  If
     the pointer is dragged, move the selection.

 -- Action: follow ()
     Continue the action initiated by `select'.  Bound to a pointer
     motion event.

 -- Action: graph-select ()
     Equivalent to `select', but also updates the current argument.

 -- Action: graph-select-or-move ()
     Equivalent to `select-or-move', but also updates the current
     argument.

 -- Action: graph-extend ()
     Equivalent to `extend', but also updates the current argument.

 -- Action: graph-extend-or-move ()
     Equivalent to `extend-or-move', but also updates the current
     argument.

 -- Action: graph-toggle ()
     Equivalent to `toggle', but also updates the current argument.

 -- Action: graph-toggle-or-move ()
     Equivalent to `toggle-or-move', but also updates the current
     argument.

 -- Action: graph-popup-menu ([`graph'|`node'|`shortcut'])
     Pops up a menu.  `graph' pops up a menu with global graph
     operations, `node' pops up a menu with node operations, and
     `shortcut' pops up a menu with display shortcuts.

     If no argument is given, pops up a menu depending on the context:
     when pointing on a node with the <Shift> key pressed, behaves like
     `shortcut'; when pointing on a without the <Shift> key pressed,
     behaves like `node'; otherwise, behaves as if `graph' was given.

 -- Action: graph-dereference ()
     Dereference the selected display.

 -- Action: graph-detail ()
     Show or hide detail of the selected display.

 -- Action: graph-rotate ()
     Rotate the selected display.

 -- Action: graph-dependent ()
     Pop up a dialog to create a dependent display.

 -- Action: hide-edges ([`any'|`both'|`from'|`to'])
     Hide some edges.  `any' means to process all edges where either
     source or target node are selected. `both' means to process all
     edges where both nodes are selected. `from' means to process all
     edges where at least the source node is selected. `to' means to
     process all edges where at least the target node is selected.
     Default is `any'.

 -- Action: layout ([`regular'|`compact'], [[`+'|`-'] degrees])
     Layout the graph.  `regular' means to use the regular layout
     algorithm; `compact' uses an alternate layout algorithm, where
     successors are placed next to their parents.  Default is
     `regular'.  DEGREES indicates in which direction the graph should
     be layouted.  Default is the current graph direction.

 -- Action: move-selected (x-offset, y-offset)
     Move all selected nodes in the direction given by X-OFFSET and
     Y-OFFSET.  X-OFFSET and Y-OFFSET is either given as a numeric
     pixel value, or as `+grid', or `-grid', meaning the current grid
     size.

 -- Action: normalize ()
     Place all nodes on their positions and redraw the graph.

 -- Action: rotate ([[`+'|`-']degrees])
     Rotate the graph around DEGREES degrees.  DEGREES must be a
     multiple of 90.  Default is `+90'.

 -- Action: select ()
     Select the node pointed at.  Clear all other selections.  Bound to
     a button down event.

 -- Action: select-all ()
     Select all nodes in the graph.

 -- Action: select-first ()
     Select the first node in the graph.

 -- Action: select-next ()
     Select the next node in the graph.

 -- Action: select-or-move ()
     Select the node pointed at.  Clear all other selections.  Bound to
     a button down event. If the pointer is dragged, move the selected
     node.

 -- Action: select-prev ()
     Select the previous node in the graph.

 -- Action: show-edges ([`any'|`both'|`from'|`to'])
     Show some edges.  `any' means to process all edges where either
     source or target node are selected. `both' means to process all
     edges where both nodes are selected. `from' means to process all
     edges where at least the source node is selected. `to' means to
     process all edges where at least the target node is selected.
     Default is `any'.

 -- Action: snap-to-grid ()
     Place all nodes on the nearest grid position.

 -- Action: toggle ()
     Toggle the current selection--if the node pointed at is selected,
     it will be unselected, and vice versa.  Bound to a button down
     event.

 -- Action: toggle-or-move ()
     Toggle the current selection--if the node pointed at is selected,
     it will be unselected, and vice versa.  Bound to a button down
     event.  If the pointer is dragged, move the selection.

 -- Action: unselect-all ()
     Clear the selection.


File: ddd.info,  Node: Debugger Console Actions,  Next: Source Window Actions,  Prev: Data Display Actions,  Up: Actions

A.1.3 Debugger Console Actions
------------------------------

These actions are used in the debugger console and other text fields.

 -- Action: gdb-backward-character ()
     Move one character to the left.  Bound to `Left'.

 -- Action: gdb-beginning-of-line ()
     Move cursor to the beginning of the current line, after the prompt.
     Bound to `HOME'.

 -- Action: gdb-control (control-character)
     Send the given CONTROL-CHARACTER to the inferior debugger.
     CONTROL-CHARACTER must be specified in the form `^X', where X is
     an upper-case letter, or `?'.

 -- Action: gdb-command (command)
     Execute COMMAND in the debugger console.  The following
     replacements are performed on COMMAND:

        * If COMMAND has the form `NAME...', insert NAME, followed by a
          space, in the debugger console.

        * All occurrences of `()' are replaced by the current contents
          of the argument field `()'.


 -- Action: gdb-complete-arg (command)
     Complete current argument as if COMMAND was prepended.  Bound to
     <Ctrl+T>.

 -- Action: gdb-complete-command ()
     Complete current command line in the debugger console.  Bound to
     <TAB>.

 -- Action: gdb-complete-tab (command)
     If global <TAB> completion is enabled, complete current argument
     as if COMMAND was prepended.  Otherwise, proceed as if the <TAB>
     key was hit.  Bound to <TAB>.

 -- Action: gdb-delete-or-control (control-character)
     Like `gdb-control', but effective only if the cursor is at the end
     of a line.  Otherwise, CONTROL-CHARACTER is ignored and the
     character following the cursor is deleted.  Bound to <Ctrl+D>.

 -- Action: gdb-end-of-line ()
     Move cursor to the end of the current line.  Bound to `End'.

 -- Action: gdb-forward-character ()
     Move one character to the right.  Bound to `Right'.

 -- Action: gdb-insert-graph-arg ()
     Insert the contents of the data display argument field `()'.

 -- Action: gdb-insert-source-arg ()
     Insert the contents of the source argument field `()'.

 -- Action: gdb-interrupt ()
     If DDD is in incremental search mode, exit it; otherwise call
     `gdb-control(^C)'.

 -- Action: gdb-isearch-prev ()
     Enter reverse incremental search mode.  Bound to <Ctrl+B>.

 -- Action: gdb-isearch-next ()
     Enter incremental search mode.  Bound to <Ctrl+F>.

 -- Action: gdb-isearch-exit ()
     Exit incremental search mode.  Bound to <ESC>.

 -- Action: gdb-next-history ()
     Recall next command from history.  Bound to `Down'.

 -- Action: gdb-prev-history ()
     Recall previous command from history.  Bound to `Up'.

 -- Action: gdb-previous-history ()
     Recall previous command from history.  Bound to `Up'.

 -- Action: gdb-process ([action [, args...]])
     Process the given event in the debugger console.  Bound to key
     events in the source and data window.  If this action is bound to
     the source window, and the source window is editable, perform
     `ACTION(ARGS...)' on the source window instead; if ACTION is not
     given, perform `self-insert()'.

 -- Action: gdb-select-all ()
     If the `selectAllBindings' resource is set to `Motif', perform
     `beginning-of-line'.  Otherwise, perform `select-all'.  Bound to
     <Ctrl+A>.

 -- Action: gdb-set-line (value)
     Set the current line to VALUE.  Bound to <Ctrl+U>.


File: ddd.info,  Node: Source Window Actions,  Prev: Debugger Console Actions,  Up: Actions

A.1.4 Source Window Actions
---------------------------

These actions are used in the source and code windows.

 -- Action: source-delete-glyph ()
     Delete the breakpoint related to the glyph at cursor position.

 -- Action: source-double-click ([text-action [, line-action [,
          function-action]]])
     The double-click action in the source window.

        * If this action is taken on a breakpoint glyph, edit the
          breakpoint properties.

        * If this action is taken in the breakpoint area, invoke
          `gdb-command(LINE-ACTION)'.  If LINE-ACTION is not given, it
          defaults to `break ()'.

        * If this action is taken in the source text, and the next
          character following the current selection is `(', invoke
          `gdb-command(FUNCTION-ACTION)'.  If FUNCTION-ACTION is not
          given, it defaults to `list ()'.

        * Otherwise, invoke `gdb-command(TEXT-ACTION)'.  If TEXT-ACTION
          is not given, it defaults to `graph display ()'.

 -- Action: source-drag-glyph ()
     Initiate a drag on the glyph at cursor position.

 -- Action: source-drop-glyph ([action])
     Drop the dragged glyph at cursor position.  ACTION is either
     `move', meaning to move the dragged glyph, or `copy', meaning to
     copy the dragged glyph.  If no ACTION is given, `move' is assumed.

 -- Action: source-end-select-word ()
     End selecting a word.

 -- Action: source-follow-glyph ()
     Continue a drag on the glyph at cursor position.  Usually bound to
     some motion event.

 -- Action: source-popup-menu ()
     Pop up a menu, depending on the location.

 -- Action: source-set-arg ()
     Set the argument field to the current selection.  Typically bound
     to some selection operation.

 -- Action: source-start-select-word ()
     Start selecting a word.

 -- Action: source-update-glyphs ()
     Update all visible glyphs.  Usually invoked after a scrolling
     operation.


File: ddd.info,  Node: Images,  Prev: Actions,  Up: Application Defaults

A.2 Images
==========

DDD installs a number of images that may be used as pixmap resources,
simply by giving a symbolic name.  For button images, three variants
are installed as well:

   * The suffix `-hi' indicates a highlighted variant (Button is
     entered).

   * The suffix `-arm' indicates an armed variant (Button is pushed).

   * The suffix `-xx' indicates a disabled (insensitive) variant.

 -- Image: break_at
     `Break at ()' button.

 -- Image: clear_at
     `Clear at ()' button.

 -- Image: ddd
     DDD icon.

 -- Image: delete
     `Delete ()' button.

 -- Image: disable
     `Disable' button.

 -- Image: dispref
     `Display * ()' button.

 -- Image: display
     `Display ()' button.

 -- Image: drag_arrow
     The execution pointer (being dragged).

 -- Image: drag_cond
     A conditional breakpoint (being dragged).

 -- Image: drag_stop
     A breakpoint (being dragged).

 -- Image: drag_temp
     A temporary breakpoint (being dragged).

 -- Image: enable
     `Enable' button.

 -- Image: find_forward
     `Find>> ()' button.

 -- Image: find_backward
     `Find<< ()' button.

 -- Image: grey_arrow
     The execution pointer (not in lowest frame).

 -- Image: grey_cond
     A conditional breakpoint (disabled).

 -- Image: grey_stop
     A breakpoint (disabled).

 -- Image: grey_temp
     A temporary breakpoint (disabled).

 -- Image: hide
     `Hide ()' button.

 -- Image: lookup
     `Lookup ()' button.

 -- Image: maketemp
     `Make Temporary' button.

 -- Image: new_break
     `New Breakpoint' button.

 -- Image: new_display
     `New Display' button.

 -- Image: new_watch
     `New Watchpoint' button.

 -- Image: plain_arrow
     The execution pointer.

 -- Image: plain_cond
     A conditional breakpoint (enabled).

 -- Image: plain_stop
     A breakpoint (enabled).

 -- Image: plain_temp
     A temporary breakpoint (enabled).

 -- Image: print
     `Print ()' button.

 -- Image: properties
     `Properties' button.

 -- Image: rotate
     `Rotate ()' button.

 -- Image: set
     `Set ()' button.

 -- Image: show
     `Show ()' button.

 -- Image: signal_arrow
     The execution pointer (stopped by signal).

 -- Image: undisplay
     `Undisplay ()' button.

 -- Image: unwatch
     `Unwatch ()' button.

 -- Image: watch
     `Watch ()' button.


File: ddd.info,  Node: Bugs,  Next: Configuration Notes,  Prev: Application Defaults,  Up: Top

Appendix B Bugs and How To Report Them
**************************************

Sometimes you will encounter a bug in DDD.  Although we cannot promise
we can or will fix the bug, and we might not even agree that it is a
bug, we want to hear about bugs you encounter in case we do want to fix
them.

   To make it possible for us to fix a bug, you must report it.  In
order to do so effectively, you must know when and how to do it.

* Menu:

* Where to Send Bug Reports::   Our e-mail address.
* Is it a DDD Bug?::         DDD may not be at fault.
* How to Report Bugs::          Report all the facts.
* Bug Reports::                 Include all configuration information.
* Diagnostics::                 Maintaining DDD


File: ddd.info,  Node: Where to Send Bug Reports,  Next: Is it a DDD Bug?,  Up: Bugs

B.1 Where to Send Bug Reports
=============================

Send bug reports for DDD via electronic mail to

     <bug-ddd@gnu.org>


File: ddd.info,  Node: Is it a DDD Bug?,  Next: How to Report Bugs,  Prev: Where to Send Bug Reports,  Up: Bugs

B.2 Is it a DDD Bug?
====================

Before sending in a bug report, try to find out whether the problem
cause really lies within DDD.  A common cause of problems are
incomplete or missing X or M*tif installations, for instance, or bugs
in the X server or M*tif itself.  Running DDD as

     $ ddd --check-configuration

   checks for common problems and gives hints on how to repair them.

   Another potential cause of problems is the inferior debugger;
occasionally, they show bugs, too.  To find out whether a bug was
caused by the inferior debugger, run DDD as

     $ ddd --trace

   This shows the interaction between DDD and the inferior debugger on
standard error while DDD is running.  (If `--trace' is not given, this
interaction is logged in the file `~/.ddd/log'; *note Logging::)
Compare the debugger output to the output of DDD and determine which
one is wrong.


File: ddd.info,  Node: How to Report Bugs,  Next: Bug Reports,  Prev: Is it a DDD Bug?,  Up: Bugs

B.3 How to Report Bugs
======================

Here are some guidelines for bug reports:

   * The fundamental principle of reporting bugs usefully is this:
     *report all the facts*.  If you are not sure whether to state a
     fact or leave it out, state it!

   * Keep in mind that the purpose of a bug report is to enable someone
     to fix the bug if it is not known.  It is not very important what
     happens if the bug is already known.  Therefore, always write your
     bug reports on the assumption that the bug is not known.

   * Your bug report should be self-contained.  Do not refer to
     information sent in previous mails; your previous mail may have
     been forwarded to somebody else.

   * Please report each bug in a separate message.  This makes it easier
     for us to track which bugs have been fixed and to forward your bugs
     reports to the appropriate maintainer.

   * Please report bugs in English; this increases the chances of
     finding someone who can fix the bug.  Do not assume one particular
     person will receive your bug report.


File: ddd.info,  Node: Bug Reports,  Next: Diagnostics,  Prev: How to Report Bugs,  Up: Bugs

B.4 What to Include in a Bug Report
===================================

To enable us to fix a DDD bug, you _must_ include the following
information:

   * Your DDD configuration.  Invoke DDD as

          $ ddd --configuration

     to get the configuration information.  If this does not work,
     please include at least the DDD version, the type of machine you
     are using, and its operating system name and version number.

   * The debugger you are using and its version (e.g., `gdb-4.17' or
     `dbx as shipped with Solaris 2.6').

   * The compiler you used to compile DDD and its version (e.g.,
     `gcc-2.8.1').

   * A description of what behavior you observe that you believe is
     incorrect.  For example, "DDD gets a fatal signal" or "DDD exits
     immediately after attempting to create the data window".

   * A _log file_ showing the interaction between DDD and the inferior
     debugger.  By default, this interaction is logged in the file
     `~/.ddd/log'.  Include all trace output from the DDD invocation up
     to the first bug occurrence; insert own comments where necessary.

   * If you wish to suggest changes to the DDD source, send us context
     diffs.  If you even discuss something in the DDD source, refer to
     it by context, _never_ by line number.

   Be sure to include this information in _every_ single bug report.


File: ddd.info,  Node: Diagnostics,  Prev: Bug Reports,  Up: Bugs

B.5 Getting Diagnostics
=======================

* Menu:

* Logging::                     DDD logs all interactions.
* Debugging DDD::            Facilities to debug DDD.
* Customizing Diagnostics::     All diagnostics resources.


File: ddd.info,  Node: Logging,  Next: Debugging DDD,  Up: Diagnostics

B.5.1 Logging
-------------

If things go wrong, the first and most important information source is
the "DDD log file".  This file, created in `~/.ddd/log' (`~' stands for
your home directory), records the following information:

   * Your DDD configuration (at the top)

   * All programs invoked by DDD, shown as `$ PROGRAM ARGS...'

   * All DDD messages, shown as `#  MESSAGE'.

   * All information sent from DDD to the inferior debugger, shown as
     `-> TEXT'.

   * All information sent from the inferior debugger standard output to
     DDD, shown as `<- TEXT'.

   * All information sent from the inferior debugger standard error to
     DDD, shown as `<= TEXT'.(1)

   * All information sent from DDD to Gnuplot, shown as `>> TEXT'.

   * All information sent from Gnuplot standard output to DDD, shown as
     `<< TEXT'.

   * All information sent from Gnuplot standard error to DDD, shown as
     `<= TEXT'.

   * If DDD crashes, a GDB backtrace of the DDD core dump is included
     at the end.

   This information, all in one place, should give you (and anyone
maintaining DDD) a first insight of what's going wrong.

* Menu:

* Disabling Logging::

   ---------- Footnotes ----------

   (1) Since the inferior debugger is invoked through a virtual TTY,
standard error is normally redirected to standard output, so DDD never
receives standard error from the inferior debugger.


File: ddd.info,  Node: Disabling Logging,  Up: Logging

B.5.1.1 Disabling Logging
.........................

The log files created by DDD can become quite large, so you might want
to turn off logging.  There is no explicit DDD feature that allows you
to do that.  However, you can easily create a _symbolic link_ from
`~/.ddd/log' to `/dev/null', such that logging information is lost.
Enter the following commands at the shell prompt:

     $ cd
     $ rm .ddd/log
     $ ln -s /dev/null .ddd/log
     $ _

   Be aware, though, that having logging turned off makes diagnostics
much more difficult; in case of trouble, it may be hard to reproduce the
error.


File: ddd.info,  Node: Debugging DDD,  Next: Customizing Diagnostics,  Prev: Logging,  Up: Diagnostics

B.5.2 Debugging DDD
-------------------

As long as DDD is compiled with `-g' (*note Compiling for Debugging::),
you can invoke a debugger on DDD--even DDD itself, if you wish.  From
within DDD, a special `Maintenance' menu is provided that invokes GDB
on the running DDD process.  *Note Maintenance Menu::, for details.

   The DDD distribution comes with a `.gdbinit' file that is suitable
for debugging DDD.  Among others, this defines a `ddd' command that
sets up an environment for debugging DDD and a `string' command that
lets you print the contents of DDD `string' variables; just use `print
VAR' followed by `string'.

   You can cause DDD to dump core at any time by sending it a `SIGUSR1'
signal.  DDD resumes execution while you can examine the core file with
GDB.

   When debugging DDD, it can be useful to make DDD not catch fatal
errors.  This can be achieved by setting the environment variable
`DDD_NO_SIGNAL_HANDLERS' before invoking DDD.


File: ddd.info,  Node: Customizing Diagnostics,  Prev: Debugging DDD,  Up: Diagnostics

B.5.3 Customizing Diagnostics
-----------------------------

You can use these additional resources to obtain diagnostics about DDD.
Most of them are tied to a particular invocation option.

 -- Resource: appDefaultsVersion (class Version)
     The version of the DDD app-defaults file.  If this string does not
     match the version of the current DDD executable, DDD issues a
     warning.

 -- Resource: checkConfiguration (class CheckConfiguration)
     If `on', check the DDD environment (in particular, the X
     configuration), report any possible problem causes and exit.
     *Note Options::, for the `--check-configuration' option.

 -- Resource: dddinitVersion (class Version)
     The version of the DDD executable that last wrote the
     `~/.ddd/init' file.  If this string does not match the version of
     the current DDD executable, DDD issues a warning.

 -- Resource: debugCoreDumps (class DebugCoreDumps)
     If `on', DDD invokes a debugger on itself when receiving a fatal
     signal.  *Note Maintenance Menu::, for setting this resource.

 -- Resource: dumpCore (class DumpCore)
     If `on' (default), DDD dumps core when receiving a fatal signal.
     *Note Maintenance Menu::, for setting this resource.

 -- Resource: maintenance (class Maintenance)
     If `on', enables the top-level `Maintenance' menu (*note
     Maintenance Menu::) with additional options.  *Note Options::, for
     the `--maintenance' option.

 -- Resource: showConfiguration (class ShowConfiguration)
     If `on', show the DDD configuration on standard output and exit.
     *Note Options::, for the `--configuration' option.

 -- Resource: showFonts (class ShowFonts)
     If `on', show the DDD font definitions on standard output and
     exit.  *Note Options::, for the `--fonts' option.

 -- Resource: showInvocation (class ShowInvocation)
     If `on', show the DDD invocation options on standard output and
     exit.  *Note Options::, for the `--help' option.

 -- Resource: showLicense (class ShowLicense)
     If `on', show the DDD license on standard output and exit.  *Note
     Options::, for the `--license' option.

 -- Resource: showManual (class ShowManual)
     If `on', show this DDD manual page on standard output and exit.
     If the standard output is a terminal, the manual page is shown in a
     pager (`$PAGER', `less' or `more').  *Note Options::, for the
     `--manual' option.  

 -- Resource: showNews (class ShowNews)
     If `on', show the DDD news on standard output and exit.  *Note
     Options::, for the `--news' option.

 -- Resource: showVersion (class ShowVersion)
     If `on', show the DDD version on standard output and exit.  *Note
     Options::, for the `--version' option.

 -- Resource: suppressWarnings (class SuppressWarnings)
     If `on', X warnings are suppressed.  This is sometimes useful for
     executables that were built on a machine with a different X or
     M*tif configuration.  By default, this is `off'.  *Note X
     Warnings::, for details.

 -- Resource: trace (class Trace)
     If `on', show the dialog between DDD and the inferior debugger on
     standard output.  Default is `off'.  *Note Options::, for the
     `--trace' option.


File: ddd.info,  Node: Configuration Notes,  Next: Dirty Tricks,  Prev: Bugs,  Up: Top

Appendix C Configuration Notes
******************************

* Menu:

* GDB::                         Using DDD with GDB
* DBX::                         Using DDD with DBX
* Ladebug::                     Using DDD with Ladebug
* XDB::                         Using DDD with XDB
* JDB::                         Using DDD with JDB
* Perl::                        Using DDD with Perl
* Bash::                        Using DDD with Bash
* LessTif::                     Using DDD with LessTif


File: ddd.info,  Node: GDB,  Next: DBX,  Up: Configuration Notes

C.1 Using DDD with GDB
======================

Some GDB settings are essential for DDD to work correctly.  These
settings with their correct values are:
     set height 0
     set width 0
     set verbose off
     set annotate 1
     set prompt (gdb)

   DDD sets these values automatically when invoking GDB; if these
values are changed, there may be some malfunctions, especially in the
data display.

   When debugging at the machine level with GDB 4.12 and earlier as
inferior debugger, use a `display /x $pc' command to ensure the program
counter value is updated correctly at each stop.  You may also enter
the command in `~/.gdbinit' or (better yet) upgrade to the most recent
GDB version.

   Further information is available on the following GDB variants:

* Menu:

* WDB::                         Using DDD with WDB
* WindRiver GDB::               Using DDD with WindRiver GDB (Tornado)


File: ddd.info,  Node: WDB,  Next: WindRiver GDB,  Up: GDB

C.1.1 Using DDD with WDB
------------------------

HP's WildeBeest (WDB) is essentially a variant of GDB.  To start DDD
with WDB as inferior debugger, use

     ddd --wdb PROGRAM

   *Note GDB::, for further configuration notes.


File: ddd.info,  Node: WindRiver GDB,  Prev: WDB,  Up: GDB

C.1.2 Using DDD with WindRiver GDB (Tornado)
--------------------------------------------

DDD now supports WindRiver's version of GDB.(1) DDD can be integrated
into the `Launch' window by placing the `launch.tcl' script (see below)
into the the directory `~/.wind'.

   Currently, DDD only supports the PowerPC and has been only tested on
a Solaris 2.6 host.

   DDD launches the version of GDB that is either in the current path,
or the one specified on the command line using the `--debugger' command.

   Normally, the Tornado environment is set up by sourcing a script file
which, among other things, sets up the PATH variable.

   It is suggested that a soft link for the version of GDB used for the
target (i.e. `gdbppc') be made in the same directory:

     bin>ls -l gdb*
     39 Mar  6 16:14 gdb -> /usr/wind/host/sun4-solaris2/bin/gdbppc*
     1619212 Mar 11  1997 gdbppc*
     bin>_

   This way DDD will start the correct version of GDB automatically.

   It is also suggested that you use DDD's execution window to
facilitate parsing of GDB output.  *Note Debugger Communication::, for
details.

   Tornado reads the default TCL scripts first, then the ones in the
users `.wind' directory.  The following procedures can be cut and
pasted into the user's `launch.tcl' file:


     # Launch.tcl - Launch application Tcl user customization file.
     #

     ######
     #
     # setupDDD - sets up DDD for use by the launcher
     #
     # This routine adds the DDD to the application bar
     #
     # SYNOPSIS:
     # setupDDD
     #
     # PARAMETERS: N/A
     #
     # RETURNS: N/A
     #
     # ERRORS: N/A
     #

     proc setupDDD {} {
         # Add to the default application bar
         objectCreate app ddd DDD {launchDDD}
     }

     ######
     #
     # launchDDD - launch the DDD debugger
     #
     # SYNOPSIS:
     # launchDDD
     #
     # PARAMETERS: N/A
     #
     # RETURNS: N/A
     #
     # ERRORS: N/A
     #

     proc launchDDD {} {

         global tgtsvr_selected
         global tgtsvr_cpuid

         if {$tgtsvr_selected == "" || $tgtsvr_cpuid == 0} {
             noticePost error "Select an attached target first."
             return
         }

         set startFileName /tmp/dddstartup.[pid]

         if [catch {open $startFileName w} file] {
              # couldn't create a startup file.  Oh, well.
              exec ddd --gdb &
         }
         else
         {
              # write out a little /tmp file that attaches to the
              # selected target server and then deletes itself.
              puts $file "set wtx-tool-name ddd"
              puts $file "target wtx $tgtsvr_selected"
              puts $file "tcl exec rm $startFileName"
              close $file
              exec ddd --gdb --command=$startFileName &
         }
     }

     ######
     #
     # Launch.tcl - Initialization
     #
     # The user's resource file sourced from the initial Launch.tcl
     #

     # Add DDD to the laucher
       setupDDD

   In order for DDD to automatically display the source of a previously
loaded file, the entry point must be named either `vxworks_main' or
`main_vxworks'.

   *Note GDB::, for further configuration notes.

   ---------- Footnotes ----------

   (1) This section was contributed by Gary Cliff from Computing
Devices Canada Ltd., <gary.cliff@cdott.com>.


File: ddd.info,  Node: DBX,  Next: Ladebug,  Prev: GDB,  Up: Configuration Notes

C.2 Using DDD with DBX
======================

When used for debugging Pascal-like programs, DDD does not infer
correct array subscripts and always starts to count with 1.

   With some DBX versions (notably Solaris DBX), DDD strips C-style and
C++-style comments from the DBX output in order to interpret it
properly.  This also affects the output of the debugged program when
sent to the debugger console.  Using the separate execution window
avoids these problems.

   In some DBX versions (notably DEC DBX and AIX DBX), there is no
automatic data display.  As an alternative, DDD uses the DBX `print'
command to access data values.  This means that variable names are
interpreted according to the current frame; variables outside the
current frame cannot be displayed.


File: ddd.info,  Node: Ladebug,  Next: XDB,  Prev: DBX,  Up: Configuration Notes

C.3 Using DDD with Ladebug
==========================

All DBX limitations (*note DBX::) apply to Ladebug as well.


File: ddd.info,  Node: XDB,  Next: JDB,  Prev: Ladebug,  Up: Configuration Notes

C.4 Using DDD with XDB
======================

There is no automatic data display in XDB.  As a workaround, DDD uses
the `p' command to access data values.  This means that variable names
are interpreted according to the current frame; variables outside the
current frame cannot be displayed.


File: ddd.info,  Node: JDB,  Next: Perl,  Prev: XDB,  Up: Configuration Notes

C.5 Using DDD with JDB
======================

There is no automatic data display in JDB.  As a workaround, DDD uses
the `dump' command to access data values.  This means that variable
names are interpreted according to the current frame; variables outside
the current frame cannot be displayed.

   In JDB 1.1, the `dump' and `print' commands do not support
expression evaluation.  Hence, you cannot display arbitrary expressions.

   Parsing of JDB output is quite CPU-intensive, due to the recognition
of asynchronous prompts (any thread may output anything at any time,
including prompts).  Hence, a program producing much console output is
likely to slow down DDD considerably.  In such a case, have the program
run with `-debug' in a separate window and attach JDB to it using the
`-passwd' option.


File: ddd.info,  Node: Perl,  Next: Bash,  Prev: JDB,  Up: Configuration Notes

C.6 Using DDD with Perl
=======================

There is no automatic data display in Perl.  As a workaround, DDD uses
the `x' command to access data values.  This means that variable names
are interpreted according to the current frame; variables outside the
current frame cannot be displayed.


File: ddd.info,  Node: Bash,  Next: LessTif,  Prev: Perl,  Up: Configuration Notes

C.7 Using DDD with Bash
=======================

BASH support is rather new. As a programming language, BASH is not
feature rich: there are no record structures or hash tables (yet), no
pointers, package variable scoping or methods. So much of the data
display and visualization features of DDD are disabled.

   As with any scripting or interpreted language like Perl, stepping a
machine-language instructions (commands Stepi/Nexti) doesn't exist.

   Some BASH settings are essential for DDD to work correctly.  These
settings with their correct values are:

     set annotate 1
     set prompt set prompt bashdb$_Dbg_less$_Dbg_greater$_Dbg_space

   DDD sets these values automatically when invoking BASH; if these
values are changed, there may be some malfunctions.

   Pay special attention when the prompt has extra angle brackets (a
nested shell) or has any parenthesis (is in a subshell). Quitting may
merely exit out of one of these nested (sub)shells rather than leave
the program.


File: ddd.info,  Node: LessTif,  Prev: Bash,  Up: Configuration Notes

C.8 Using DDD with LessTif
==========================

DDD includes a number of hacks that make DDD run with _LessTif,_ a free
M*tif library without loss of functionality.  Since a DDD binary may be
dynamically bound and used with either an OSF/Motif or LessTif library,
these _lesstif hacks_ can be enabled and disabled at run time.

   Whether the _lesstif hacks_ are included at run-time depends on the
setting of the `lessTifVersion' resource:

 -- Resource: lessTifVersion (class LessTifVersion)
     Indicates the LessTif version DDD is running against.  For LessTif
     version X.Y, the value is X multiplied by 1000 plus Y--for
     instance, the value `79' stands for LessTif 0.79 and the value
     `1005' stands for LessTif 1.5.

     If the value of this resource is less than 1000, indicating LessTif
     0.99 or earlier, DDD enables version-specific hacks to make DDD
     work around LessTif bugs and deficiencies.

     If DDD was compiled against LessTif, the default value is the
     value of the `LessTifVersion' macro in `<Xm/Xm.h>'.  If DDD was
     compiled against OSF/Motif, the default value is `1000', disabling
     all LessTif-specific hacks.

   To set the `lessTifVersion' resource at DDD invocation and to
specify the version number of the LessTif library, you can also use the
option `--lesstif-version' VERSION.

   The default value of the `lessTifVersion' resource is derived from
the LessTif library DDD was compiled against (or `1000' when compiled
against OSF/Motif).  Hence, you normally don't need to worry about the
value of this resource.  However, if you use a dynamically linked DDD
binary with a library other than the one DDD was compiled against, you
must specify the version number of the library using this resource.
(Unfortunately, DDD cannot detect this at run-time.)

   Here are a few scenarios to illustrate this scheme:
   * Your DDD binary was compiled against OSF/Motif, but you use a
     LessTif 0.88 dynamic library instead.  Invoke DDD with
     `--lesstif-version 88'.

   * Your DDD binary was compiled against LessTif, but you use a
     OSF/Motif dynamic library instead.    Invoke DDD with
     `--lesstif-version 1000'.

   * Your DDD binary was compiled against LessTif 0.85, and you have
     upgraded to LessTif 0.90.  Invoke DDD with `--lesstif-version 90'.

   To find out the LessTif or OSF/Motif version DDD was compiled
against, invoke DDD with the `--configuration' option.

   In the DDD source, LessTif-specific hacks are controlled by the
string `lesstif_version'.


File: ddd.info,  Node: Dirty Tricks,  Next: Extending,  Prev: Configuration Notes,  Up: Top

Appendix D Dirty Tricks
***********************

Do you miss anything in this manual?  Do you have any material that
should be added?  Please send any contributions to <ddd@gnu.org>.


File: ddd.info,  Node: Extending,  Next: FAQ,  Prev: Dirty Tricks,  Up: Top

Appendix E Extending DDD
************************

If you have any contributions to be incorporated into DDD, please send
them to <ddd@gnu.org>.  For suggestions on what might be done, see the
file `TODO' in the DDD distribution.


File: ddd.info,  Node: FAQ,  Next: License,  Prev: Extending,  Up: Top

Appendix F Frequently Answered Questions
****************************************

See the DDD WWW page (http://www.gnu.org/software/ddd/) for frequently
answered questions not covered in this manual.


File: ddd.info,  Node: License,  Next: Help and Assistance,  Prev: FAQ,  Up: Top

Appendix G GNU General Public License
*************************************

                         Version 2, June 1991

     Copyright (C) 1989, 1991 Free Software Foundation, Inc.  675
     Mass Ave, Boston, MA 02111-1307, USA

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

Preamble
========

The licenses for most software are designed to take away your freedom
to share and change it.  By contrast, the GNU General Public License is
intended to guarantee your freedom to share and change free
software--to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

   When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it in
new free programs; and that you know you can do these things.

   To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

   For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

   We protect your rights with two steps: (1) copyright the software,
and (2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

   Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

   Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

   The precise terms and conditions for copying, distribution and
modification follow.

    TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
  0. This License applies to any program or other work which contains a
     notice placed by the copyright holder saying it may be distributed
     under the terms of this General Public License.  The "Program",
     below, refers to any such program or work, and a "work based on
     the Program" means either the Program or any derivative work under
     copyright law: that is to say, a work containing the Program or a
     portion of it, either verbatim or with modifications and/or
     translated into another language.  (Hereinafter, translation is
     included without limitation in the term "modification".)  Each
     licensee is addressed as "you".

     Activities other than copying, distribution and modification are
     not covered by this License; they are outside its scope.  The act
     of running the Program is not restricted, and the output from the
     Program is covered only if its contents constitute a work based on
     the Program (independent of having been made by running the
     Program).  Whether that is true depends on what the Program does.

  1. You may copy and distribute verbatim copies of the Program's
     source code as you receive it, in any medium, provided that you
     conspicuously and appropriately publish on each copy an appropriate
     copyright notice and disclaimer of warranty; keep intact all the
     notices that refer to this License and to the absence of any
     warranty; and give any other recipients of the Program a copy of
     this License along with the Program.

     You may charge a fee for the physical act of transferring a copy,
     and you may at your option offer warranty protection in exchange
     for a fee.

  2. You may modify your copy or copies of the Program or any portion
     of it, thus forming a work based on the Program, and copy and
     distribute such modifications or work under the terms of Section 1
     above, provided that you also meet all of these conditions:

       a. You must cause the modified files to carry prominent notices
          stating that you changed the files and the date of any change.

       b. You must cause any work that you distribute or publish, that
          in whole or in part contains or is derived from the Program
          or any part thereof, to be licensed as a whole at no charge
          to all third parties under the terms of this License.

       c. If the modified program normally reads commands interactively
          when run, you must cause it, when started running for such
          interactive use in the most ordinary way, to print or display
          an announcement including an appropriate copyright notice and
          a notice that there is no warranty (or else, saying that you
          provide a warranty) and that users may redistribute the
          program under these conditions, and telling the user how to
          view a copy of this License.  (Exception: if the Program
          itself is interactive but does not normally print such an
          announcement, your work based on the Program is not required
          to print an announcement.)

     These requirements apply to the modified work as a whole.  If
     identifiable sections of that work are not derived from the
     Program, and can be reasonably considered independent and separate
     works in themselves, then this License, and its terms, do not
     apply to those sections when you distribute them as separate
     works.  But when you distribute the same sections as part of a
     whole which is a work based on the Program, the distribution of
     the whole must be on the terms of this License, whose permissions
     for other licensees extend to the entire whole, and thus to each
     and every part regardless of who wrote it.

     Thus, it is not the intent of this section to claim rights or
     contest your rights to work written entirely by you; rather, the
     intent is to exercise the right to control the distribution of
     derivative or collective works based on the Program.

     In addition, mere aggregation of another work not based on the
     Program with the Program (or with a work based on the Program) on
     a volume of a storage or distribution medium does not bring the
     other work under the scope of this License.

  3. You may copy and distribute the Program (or a work based on it,
     under Section 2) in object code or executable form under the terms
     of Sections 1 and 2 above provided that you also do one of the
     following:

       a. Accompany it with the complete corresponding machine-readable
          source code, which must be distributed under the terms of
          Sections 1 and 2 above on a medium customarily used for
          software interchange; or,

       b. Accompany it with a written offer, valid for at least three
          years, to give any third party, for a charge no more than your
          cost of physically performing source distribution, a complete
          machine-readable copy of the corresponding source code, to be
          distributed under the terms of Sections 1 and 2 above on a
          medium customarily used for software interchange; or,

       c. Accompany it with the information you received as to the offer
          to distribute corresponding source code.  (This alternative is
          allowed only for noncommercial distribution and only if you
          received the program in object code or executable form with
          such an offer, in accord with Subsection b above.)

     The source code for a work means the preferred form of the work for
     making modifications to it.  For an executable work, complete
     source code means all the source code for all modules it contains,
     plus any associated interface definition files, plus the scripts
     used to control compilation and installation of the executable.
     However, as a special exception, the source code distributed need
     not include anything that is normally distributed (in either
     source or binary form) with the major components (compiler,
     kernel, and so on) of the operating system on which the executable
     runs, unless that component itself accompanies the executable.

     If distribution of executable or object code is made by offering
     access to copy from a designated place, then offering equivalent
     access to copy the source code from the same place counts as
     distribution of the source code, even though third parties are not
     compelled to copy the source along with the object code.

  4. You may not copy, modify, sublicense, or distribute the Program
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense or distribute the Program is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

  5. You are not required to accept this License, since you have not
     signed it.  However, nothing else grants you permission to modify
     or distribute the Program or its derivative works.  These actions
     are prohibited by law if you do not accept this License.
     Therefore, by modifying or distributing the Program (or any work
     based on the Program), you indicate your acceptance of this
     License to do so, and all its terms and conditions for copying,
     distributing or modifying the Program or works based on it.

  6. Each time you redistribute the Program (or any work based on the
     Program), the recipient automatically receives a license from the
     original licensor to copy, distribute or modify the Program
     subject to these terms and conditions.  You may not impose any
     further restrictions on the recipients' exercise of the rights
     granted herein.  You are not responsible for enforcing compliance
     by third parties to this License.

  7. If, as a consequence of a court judgment or allegation of patent
     infringement or for any other reason (not limited to patent
     issues), conditions are imposed on you (whether by court order,
     agreement or otherwise) that contradict the conditions of this
     License, they do not excuse you from the conditions of this
     License.  If you cannot distribute so as to satisfy simultaneously
     your obligations under this License and any other pertinent
     obligations, then as a consequence you may not distribute the
     Program at all.  For example, if a patent license would not permit
     royalty-free redistribution of the Program by all those who
     receive copies directly or indirectly through you, then the only
     way you could satisfy both it and this License would be to refrain
     entirely from distribution of the Program.

     If any portion of this section is held invalid or unenforceable
     under any particular circumstance, the balance of the section is
     intended to apply and the section as a whole is intended to apply
     in other circumstances.

     It is not the purpose of this section to induce you to infringe any
     patents or other property right claims or to contest validity of
     any such claims; this section has the sole purpose of protecting
     the integrity of the free software distribution system, which is
     implemented by public license practices.  Many people have made
     generous contributions to the wide range of software distributed
     through that system in reliance on consistent application of that
     system; it is up to the author/donor to decide if he or she is
     willing to distribute software through any other system and a
     licensee cannot impose that choice.

     This section is intended to make thoroughly clear what is believed
     to be a consequence of the rest of this License.

  8. If the distribution and/or use of the Program is restricted in
     certain countries either by patents or by copyrighted interfaces,
     the original copyright holder who places the Program under this
     License may add an explicit geographical distribution limitation
     excluding those countries, so that distribution is permitted only
     in or among countries not thus excluded.  In such case, this
     License incorporates the limitation as if written in the body of
     this License.

  9. The Free Software Foundation may publish revised and/or new
     versions of the General Public License from time to time.  Such
     new versions will be similar in spirit to the present version, but
     may differ in detail to address new problems or concerns.

     Each version is given a distinguishing version number.  If the
     Program specifies a version number of this License which applies
     to it and "any later version", you have the option of following
     the terms and conditions either of that version or of any later
     version published by the Free Software Foundation.  If the Program
     does not specify a version number of this License, you may choose
     any version ever published by the Free Software Foundation.

 10. If you wish to incorporate parts of the Program into other free
     programs whose distribution conditions are different, write to the
     author to ask for permission.  For software which is copyrighted
     by the Free Software Foundation, write to the Free Software
     Foundation; we sometimes make exceptions for this.  Our decision
     will be guided by the two goals of preserving the free status of
     all derivatives of our free software and of promoting the sharing
     and reuse of software generally.

                                NO WARRANTY
 11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO
     WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE
     LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT
     WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT
     NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
     FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE
     QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
     PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY
     SERVICING, REPAIR OR CORRECTION.

 12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN
     WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY
     MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE
     LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,
     INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR
     INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU
     OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY
     OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN
     ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.

                      END OF TERMS AND CONDITIONS
How to Apply These Terms to Your New Programs
=============================================

If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these
terms.

   To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

     ONE LINE TO GIVE THE PROGRAM'S NAME AND AN IDEA OF WHAT IT DOES.
     Copyright (C) 19YY  NAME OF AUTHOR

     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU General Public License
     as published by the Free Software Foundation; either version 2
     of the License, or (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

   Also add information on how to contact you by electronic and paper
mail.

   If the program is interactive, make it output a short notice like
this when it starts in an interactive mode:

     Gnomovision version 69, Copyright (C) 19YY NAME OF AUTHOR
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
     type `show w'.  This is free software, and you are welcome
     to redistribute it under certain conditions; type `show c'
     for details.

   The hypothetical commands `show w' and `show c' should show the
appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than `show w' and `show
c'; they could even be mouse-clicks or menu items--whatever suits your
program.

   You should also get your employer (if you work as a programmer) or
your school, if any, to sign a "copyright disclaimer" for the program,
if necessary.  Here is a sample; alter the names:

     Yoyodyne, Inc., hereby disclaims all copyright
     interest in the program `Gnomovision'
     (which makes passes at compilers) written
     by James Hacker.

     SIGNATURE OF TY COON, 1 April 1989
     Ty Coon, President of Vice

   This General Public License does not permit incorporating your
program into proprietary programs.  If your program is a subroutine
library, you may consider it more useful to permit linking proprietary
applications with the library.  If this is what you want to do, use the
GNU Library General Public License instead of this License.


File: ddd.info,  Node: Help and Assistance,  Next: Documentation License,  Prev: License,  Up: Top

Appendix H Help and Assistance
******************************

We have set up a _mailing list_ for general DDD discussions.  If you
need help and assistance for solving a DDD problem, you find the right
people here.

   Send message to all receivers of the mailing list to:

     <ddd@gnu.org>

   This mailing list is also the place where new DDD releases are
announced.  If you want to subscribe the list, or get more information,
send a mail to

     <ddd-request@gnu.org>

   See also the DDD WWW page (http://www.gnu.org/software/ddd/) for
recent announcements and other news related to DDD.


File: ddd.info,  Node: Documentation License,  Next: Label Index,  Prev: Help and Assistance,  Up: Top

Appendix I GNU Free Documentation License
*****************************************

                        Version 1.1, March 2000

     Copyright (C) 2000  Free Software Foundation, Inc.
     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.


  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     written document "free" in the sense of freedom: to assure everyone
     the effective freedom to copy and redistribute it, with or without
     modifying it, either commercially or noncommercially.  Secondarily,
     this License preserves for the author and publisher a way to get
     credit for their work, while not being considered responsible for
     modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.
     We recommend this License principally for works whose purpose is
     instruction or reference.


  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work that contains a
     notice placed by the copyright holder saying it can be distributed
     under the terms of this License.  The "Document", below, refers to
     any such manual or work.  Any member of the public is a licensee,
     and is addressed as "you".

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter
     section of the Document that deals exclusively with the
     relationship of the publishers or authors of the Document to the
     Document's overall subject (or to related matters) and contains
     nothing that could fall directly within that overall subject.
     (For example, if the Document is in part a textbook of
     mathematics, a Secondary Section may not explain any mathematics.)
     The relationship could be a matter of historical connection with
     the subject or with related matters, or of legal, commercial,
     philosophical, ethical or political position regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in
     the notice that says that the Document is released under this
     License.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, whose contents can be viewed and edited directly
     and straightforwardly with generic text editors or (for images
     composed of pixels) generic paint programs or (for drawings) some
     widely available drawing editor, and that is suitable for input to
     text formatters or for automatic translation to a variety of
     formats suitable for input to text formatters.  A copy made in an
     otherwise Transparent file format whose markup has been designed
     to thwart or discourage subsequent modification by readers is not
     Transparent.  A copy that is not "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and
     standard-conforming simple HTML designed for human modification.
     Opaque formats include PostScript, PDF, proprietary formats that
     can be read and edited only by proprietary word processors, SGML
     or XML for which the DTD and/or processing tools are not generally
     available, and the machine-generated HTML produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow
     the conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies of the Document numbering more than
     100, and the Document's license notice requires Cover Texts, you
     must enclose the copies in covers that carry, clearly and legibly,
     all these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the
     title equally prominent and visible.  You may add other material
     on the covers in addition.  Copying with changes limited to the
     covers, as long as they preserve the title of the Document and
     satisfy these conditions, can be treated as verbatim copying in
     other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a
     machine-readable Transparent copy along with each Opaque copy, or
     state in or with each Opaque copy a publicly-accessible
     computer-network location containing a complete Transparent copy
     of the Document, free of added material, which the general
     network-using public has access to download anonymously at no
     charge using public-standard network protocols.  If you use the
     latter option, you must take reasonably prudent steps, when you
     begin distribution of Opaque copies in quantity, to ensure that
     this Transparent copy will remain thus accessible at the stated
     location until at least one year after the last time you
     distribute an Opaque copy (directly or through your agents or
     retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of
     copies, to give them a chance to provide you with an updated
     version of the Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with
     the Modified Version filling the role of the Document, thus
     licensing distribution and modification of the Modified Version to
     whoever possesses a copy of it.  In addition, you must do these
     things in the Modified Version:

     A. Use in the Title Page (and on the covers, if any) a title
     distinct    from that of the Document, and from those of previous
     versions    (which should, if there were any, be listed in the
     History section    of the Document).  You may use the same title
     as a previous version    if the original publisher of that version
     gives permission.
     B. List on the Title Page, as authors, one or more persons or
     entities    responsible for authorship of the modifications in the
     Modified    Version, together with at least five of the principal
     authors of the    Document (all of its principal authors, if it
     has less than five).
     C. State on the Title page the name of the publisher of the
     Modified Version, as the publisher.
     D. Preserve all the copyright notices of the Document.
     E. Add an appropriate copyright notice for your modifications
     adjacent to the other copyright notices.
     F. Include, immediately after the copyright notices, a license
     notice    giving the public permission to use the Modified Version
     under the    terms of this License, in the form shown in the
     Addendum below.
     G. Preserve in that license notice the full lists of Invariant
     Sections    and required Cover Texts given in the Document's
     license notice.
     H. Include an unaltered copy of this License.
     I. Preserve the section entitled "History", and its title, and add
     to    it an item stating at least the title, year, new authors, and
       publisher of the Modified Version as given on the Title Page.  If
       there is no section entitled "History" in the Document, create
     one    stating the title, year, authors, and publisher of the
     Document as    given on its Title Page, then add an item
     describing the Modified    Version as stated in the previous
     sentence.
     J. Preserve the network location, if any, given in the Document for
       public access to a Transparent copy of the Document, and likewise
       the network locations given in the Document for previous versions
       it was based on.  These may be placed in the "History" section.
       You may omit a network location for a work that was published at
       least four years before the Document itself, or if the original
      publisher of the version it refers to gives permission.
     K. In any section entitled "Acknowledgements" or "Dedications",
     preserve the section's title, and preserve in the section all the
      substance and tone of each of the contributor acknowledgements
     and/or dedications given therein.
     L. Preserve all the Invariant Sections of the Document,
     unaltered in their text and in their titles.  Section numbers
     or the equivalent are not considered part of the section titles.
     M. Delete any section entitled "Endorsements".  Such a section
     may not be included in the Modified Version.
     N. Do not retitle any existing section as "Endorsements"    or to
     conflict in title with any Invariant Section.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option
     designate some or all of these sections as invariant.  To do this,
     add their titles to the list of Invariant Sections in the Modified
     Version's license notice.  These titles must be distinct from any
     other section titles.

     You may add a section entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties-for example, statements of peer review or that the text has
     been approved by an organization as the authoritative definition
     of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end
     of the list of Cover Texts in the Modified Version.  Only one
     passage of Front-Cover Text and one of Back-Cover Text may be
     added by (or through arrangements made by) any one entity.  If the
     Document already includes a cover text for the same cover,
     previously added by you or by arrangement made by the same entity
     you are acting on behalf of, you may not add another; but you may
     replace the old one, on explicit permission from the previous
     publisher that added the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination
     all of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections entitled
     "History" in the various original documents, forming one section
     entitled "History"; likewise combine any sections entitled
     "Acknowledgements", and any sections entitled "Dedications".  You
     must delete all sections entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the
     documents in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow
     this License in all other respects regarding verbatim copying of
     that document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of
     a storage or distribution medium, does not as a whole count as a
     Modified Version of the Document, provided no compilation
     copyright is claimed for the compilation.  Such a compilation is
     called an "aggregate", and this License does not apply to the
     other self-contained works thus compiled with the Document, on
     account of their being thus compiled, if they are not themselves
     derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one
     quarter of the entire aggregate, the Document's Cover Texts may be
     placed on covers that surround only the Document within the
     aggregate.  Otherwise they must appear on covers around the whole
     aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License provided that you also include the
     original English version of this License.  In case of a
     disagreement between the translation and the original English
     version of this License, the original English version will prevail.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided for under this License.  Any other
     attempt to copy, modify, sublicense or distribute the Document is
     void, and will automatically terminate your rights under this
     License.  However, parties who have received copies, or rights,
     from you under this License will not have their licenses
     terminated so long as such parties remain in full compliance.

 10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     http://www.gnu.org/copyleft/.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If
     the Document does not specify a version number of this License,
     you may choose any version ever published (not as a draft) by the
     Free Software Foundation.


ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:


       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.1
       or any later version published by the Free Software Foundation;
       with the Invariant Sections being LIST THEIR TITLES, with the
       Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.
       A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.
If you have no Invariant Sections, write "with no Invariant Sections"
instead of saying which ones are invariant.  If you have no Front-Cover
Texts, write "no Front-Cover Texts" instead of "Front-Cover Texts being
LIST"; likewise for Back-Cover Texts.

   If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of
free software license, such as the GNU General Public License, to
permit their use in free software.


File: ddd.info,  Node: Label Index,  Next: Key Index,  Prev: Documentation License,  Up: Top

Label Index
***********

 [index ]
* Menu:

* ():                                    GDB Argument Commands.
                                                              (line   6)
* 3-D Lines:                             Plot Appearance.     (line  15)
* Abort <1>:                             Program Menu.        (line  76)
* Abort:                                 Quitting.            (line  17)
* About DDD:                             Help Menu.           (line  40)
* Align on Grid:                         Data Menu.           (line  45)
* All Signals:                           Signals.             (line  53)
* Apply:                                 Commands Menu.       (line  41)
* Attach:                                Attaching to a Process.
                                                              (line   9)
* Attach to Process <1>:                 Attaching to a Process.
                                                              (line   9)
* Attach to Process:                     File Menu.           (line  36)
* Auto-align Displays on Nearest Grid Point: Aligning Displays.
                                                              (line  10)
* Automatic Display of Button Hints:     Button tips.         (line   6)
* Automatic Display of Variable Values:  Value Tips.          (line  30)
* Backtrace:                             Status Menu.         (line  10)
* Bash Console:                          View Menu.           (line  17)
* Bash Reference <1>:                    Getting Help.        (line  41)
* Bash Reference:                        Help Menu.           (line  31)
* Break <1>:                             Setting Breakpoints. (line  13)
* Break:                                 Tool Bar.            (line  49)
* Breakpoints:                           Source Menu.         (line  10)
* Button:                                GDB Simple Commands. (line  35)
* Cache Machine Code:                    Customizing Machine Code.
                                                              (line  14)
* Cache source files:                    Customizing Source Lookup.
                                                              (line  18)
* Change Directory <1>:                  Working Directory.   (line  10)
* Change Directory:                      File Menu.           (line  48)
* Clear <1>:                             Disabling Breakpoints.
                                                              (line  22)
* Clear <2>:                             Deleting Breakpoints.
                                                              (line   6)
* Clear <3>:                             Tool Bar.            (line  54)
* Clear:                                 Edit Menu.           (line  47)
* Clear Line:                            Commands Menu.       (line  45)
* Clear Undo Buffer:                     Customizing Undo.    (line  27)
* Clear Window:                          Commands Menu.       (line  49)
* Close:                                 File Menu.           (line  56)
* Close data window when deleting last display: Deleting Displays.
                                                              (line  32)
* Cluster:                               Clustering.          (line  12)
* Cluster Data Displays:                 Clustering.          (line  18)
* clustered:                             Clustering.          (line  35)
* Color:                                 Printing the Graph.  (line  31)
* Command <1>:                           GDB Simple Commands. (line  14)
* Command:                               Entering Plotting Commands.
                                                              (line   6)
* Command History:                       Commands Menu.       (line  14)
* Command Tool:                          View Menu.           (line   9)
* Commands <1>:                          Commands Menu.       (line   6)
* Commands:                              Menu Bar.            (line  26)
* Complete:                              Commands Menu.       (line  37)
* Cont:                                  Command Tool.        (line  70)
* Continue <1>:                          Continuing Somewhere Else.
                                                              (line  32)
* Continue <2>:                          Resuming Execution.  (line   9)
* Continue:                              Program Menu.        (line  55)
* Continue Automatically when Mouse Pointer is Frozen: Stopping X Programs.
                                                              (line  25)
* Continue Until Here:                   Temporary Breakpoints.
                                                              (line  20)
* Continue Without Signal <1>:           Signals.             (line  72)
* Continue Without Signal:               Program Menu.        (line  60)
* Contour:                               Plot Appearance.     (line  21)
* Copy <1>:                              Deleting Displays.   (line  40)
* Copy:                                  Edit Menu.           (line  29)
* Ctrl+A is:                             Customizing the Edit Menu.
                                                              (line  22)
* Ctrl+C is:                             Customizing the Edit Menu.
                                                              (line   9)
* Cut <1>:                               Deleting Displays.   (line  40)
* Cut:                                   Edit Menu.           (line  19)
* Data <1>:                              Data Menu.           (line   6)
* Data:                                  Menu Bar.            (line  38)
* Data Scrolling:                        Scrolling Data.      (line  12)
* Data Window:                           View Menu.           (line  24)
* DBX Console:                           View Menu.           (line  17)
* DBX Reference <1>:                     Getting Help.        (line  41)
* DBX Reference:                         Help Menu.           (line  31)
* DBX Settings:                          Edit Menu.           (line  66)
* DDD License:                           Help Menu.           (line  34)
* DDD News:                              Help Menu.           (line  28)
* DDD Reference <1>:                     Getting Help.        (line  38)
* DDD Reference:                         Help Menu.           (line  25)
* DDD Splash Screen:                     Splash Screen.       (line   6)
* DDD WWW Page <1>:                      Getting Help.        (line  45)
* DDD WWW Page:                          Help Menu.           (line  37)
* Debug DDD:                             Maintenance Menu.    (line  14)
* Debugger Reference <1>:                Getting Help.        (line  41)
* Debugger Reference:                    Help Menu.           (line  31)
* Debugger Settings:                     Edit Menu.           (line  66)
* Debugger Type:                         Debugger Invocation. (line   6)
* Define Command:                        Commands Menu.       (line  53)
* Delete <1>:                            Editing Breakpoint Properties.
                                                              (line  22)
* Delete <2>:                            Deleting Breakpoints.
                                                              (line  18)
* Delete <3>:                            Edit Menu.           (line  50)
* Delete:                                Deleting Sessions.   (line   6)
* Delete Breakpoint:                     Deleting Breakpoints.
                                                              (line  14)
* Detach Process <1>:                    Attaching to a Process.
                                                              (line  24)
* Detach Process:                        File Menu.           (line  40)
* Detect Aliases <1>:                    Shared Structures.   (line  12)
* Detect Aliases:                        Data Menu.           (line  29)
* Determine Automatically from Arguments: Debugger Invocation.
                                                              (line   9)
* Disable <1>:                           Editing Breakpoint Properties.
                                                              (line  18)
* Disable:                               Disabling Breakpoints.
                                                              (line  15)
* Disable Breakpoint:                    Disabling Breakpoints.
                                                              (line  11)
* Disp *:                                Dereferencing Pointers.
                                                              (line  10)
* Display <1>:                           Creating Single Displays.
                                                              (line   6)
* Display <2>:                           Display Basics.      (line   9)
* Display:                               Tool Bar.            (line  78)
* Display ():                            Data Menu.           (line  25)
* Display *:                             Dereferencing Pointers.
                                                              (line  14)
* Display *():                           Dereferencing Pointers.
                                                              (line  22)
* Display Arguments <1>:                 Displaying Local Variables.
                                                              (line   6)
* Display Arguments:                     Data Menu.           (line  37)
* Display Line Numbers:                  Source Menu.         (line  34)
* Display Local Variables <1>:           Displaying Local Variables.
                                                              (line   6)
* Display Local Variables:               Data Menu.           (line  33)
* Display Machine Code:                  Source Menu.         (line  38)
* Display Source Line Numbers:           Customizing Source Appearance.
                                                              (line   6)
* Display Two-Dimensional Arrays as Tables: Arrays as Tables. (line   6)
* Displays:                              Data Menu.           (line  10)
* Do Nothing:                            Maintenance Menu.    (line  39)
* Down <1>:                              Selecting a frame.   (line  16)
* Down <2>:                              Command Tool.        (line  84)
* Down:                                  Status Menu.         (line  30)
* Dump Core:                             Maintenance Menu.    (line  34)
* Dump Core Now:                         Maintenance Menu.    (line  18)
* Edit <1>:                              Editing Source Code. (line   6)
* Edit <2>:                              Command Tool.        (line  98)
* Edit <3>:                              Edit Menu.           (line   6)
* Edit:                                  Menu Bar.            (line  14)
* Edit <<:                               GDB Simple Commands. (line  29)
* Edit >> <1>:                           GDB Simple Commands. (line  29)
* Edit >>:                               Breakpoint Commands. (line  33)
* Edit Buttons <1>:                      Defining Buttons.    (line  17)
* Edit Buttons:                          Commands Menu.       (line  57)
* Edit Menu:                             Display Shortcuts.   (line  31)
* Edit Source <1>:                       Editing Source Code. (line   6)
* Edit Source:                           Source Menu.         (line  42)
* Edit Sources:                          Editing Source Code. (line  11)
* Edit Themes:                           Editing Themes.      (line  31)
* Enable <1>:                            Editing Breakpoint Properties.
                                                              (line  16)
* Enable:                                Disabling Breakpoints.
                                                              (line  15)
* Enable Breakpoint:                     Disabling Breakpoints.
                                                              (line  11)
* Enable supported buttons only:         Defining Buttons.    (line  28)
* End <1>:                               GDB Simple Commands. (line  25)
* End:                                   Breakpoint Commands. (line  31)
* Execute:                               GDB Simple Commands. (line  32)
* Execution Window <1>:                  Customizing the Execution Window.
                                                              (line   8)
* Execution Window:                      View Menu.           (line  13)
* Exit <1>:                              File Menu.           (line  62)
* Exit:                                  Quitting.            (line   6)
* File <1>:                              File Menu.           (line   6)
* File:                                  Menu Bar.            (line   9)
* File Name:                             Printing the Graph.  (line  13)
* Find <<:                               Textual Search.      (line   6)
* Find << ():                            Source Menu.         (line  22)
* Find >> <1>:                           Textual Search.      (line   6)
* Find >>:                               Tool Bar.            (line  42)
* Find >> ():                            Source Menu.         (line  18)
* Find Backward:                         Commands Menu.       (line  25)
* Find Case Sensitive:                   Source Menu.         (line  30)
* Find Forward:                          Commands Menu.       (line  29)
* Find Words Only <1>:                   Textual Search.      (line  11)
* Find Words Only:                       Source Menu.         (line  26)
* Finish <1>:                            Resuming Execution.  (line  81)
* Finish <2>:                            Command Tool.        (line  65)
* Finish:                                Program Menu.        (line  50)
* GDB Console:                           View Menu.           (line  17)
* GDB Reference <1>:                     Getting Help.        (line  41)
* GDB Reference:                         Help Menu.           (line  31)
* GDB Settings:                          Edit Menu.           (line  66)
* Get Core File:                         Customizing Sessions.
                                                              (line  10)
* Help <1>:                              Getting Help.        (line  24)
* Help <2>:                              Help Menu.           (line   6)
* Help:                                  Menu Bar.            (line  46)
* Hide <1>:                              Showing and Hiding Details.
                                                              (line  15)
* Hide:                                  Tool Bar.            (line  85)
* Iconify all windows at once:           Icons.               (line   6)
* Ignore Count:                          Breakpoint Ignore Counts.
                                                              (line  17)
* Include Core Dump:                     Saving Sessions.     (line  17)
* Interrupt <1>:                         Interrupting.        (line   6)
* Interrupt <2>:                         Command Tool.        (line  35)
* Interrupt:                             Program Menu.        (line  70)
* JDB Console:                           View Menu.           (line  17)
* JDB Reference <1>:                     Getting Help.        (line  41)
* JDB Reference:                         Help Menu.           (line  31)
* JDB Settings:                          Edit Menu.           (line  66)
* Kill <1>:                              Killing the Program. (line   7)
* Kill <2>:                              Command Tool.        (line  75)
* Kill:                                  Program Menu.        (line  66)
* Ladebug Console:                       View Menu.           (line  17)
* Ladebug Reference <1>:                 Getting Help.        (line  41)
* Ladebug Reference:                     Help Menu.           (line  31)
* Ladebug Settings:                      Edit Menu.           (line  66)
* Landscape:                             Printing Plots.      (line  20)
* Layout Graph <1>:                      Automatic Layout.    (line   6)
* Layout Graph:                          Data Menu.           (line  53)
* Left to right:                         Placement.           (line   6)
* List Processes:                        Attaching to a Process.
                                                              (line  30)
* Lookup <1>:                            Editing Breakpoint Properties.
                                                              (line  14)
* Lookup <2>:                            Looking up Definitions.
                                                              (line   6)
* Lookup:                                Tool Bar.            (line  38)
* Lookup ():                             Source Menu.         (line  14)
* Machine Code Indentation:              Customizing Machine Code.
                                                              (line  22)
* Machine Code Window:                   View Menu.           (line  28)
* Maintenance <1>:                       Maintenance Menu.    (line   6)
* Maintenance:                           Menu Bar.            (line  42)
* Make <1>:                              Recompiling.         (line   6)
* Make <2>:                              Command Tool.        (line 102)
* Make:                                  File Menu.           (line  52)
* Memory <1>:                            Examining Memory.    (line   6)
* Memory:                                Data Menu.           (line  18)
* New Display:                           Display Shortcuts.   (line  48)
* New Game:                              Maintenance Menu.    (line  22)
* Next <1>:                              Resuming Execution.  (line  41)
* Next <2>:                              Command Tool.        (line  49)
* Next <3>:                              Commands Menu.       (line  21)
* Next:                                  Program Menu.        (line  34)
* Next Instruction <1>:                  Machine Code Execution.
                                                              (line  13)
* Next Instruction:                      Program Menu.        (line  40)
* Nexti <1>:                             Machine Code Execution.
                                                              (line  13)
* Nexti:                                 Command Tool.        (line  55)
* On item:                               Help Menu.           (line  13)
* Open <1>:                              Opening Source Files.
                                                              (line  15)
* Open <2>:                              Opening Core Dumps.  (line   9)
* Open:                                  Opening Programs.    (line   6)
* Open Class <1>:                        Opening Programs.    (line   9)
* Open Class:                            File Menu.           (line  12)
* Open Core Dump:                        File Menu.           (line  20)
* Open Program <1>:                      Attaching to a Process.
                                                              (line  21)
* Open Program <2>:                      Opening Programs.    (line   6)
* Open Program:                          File Menu.           (line  12)
* Open Recent <1>:                       Opening Programs.    (line  12)
* Open Recent:                           File Menu.           (line  16)
* Open Session <1>:                      File Menu.           (line  28)
* Open Session:                          Resuming Sessions.   (line   6)
* Open Source <1>:                       Opening Source Files.
                                                              (line   6)
* Open Source:                           File Menu.           (line  24)
* Orientation:                           Printing the Graph.  (line  31)
* Other:                                 Display Shortcuts.   (line  19)
* Overview:                              Help Menu.           (line  10)
* Paper Size <1>:                        Printing Plots.      (line  20)
* Paper Size:                            Printing the Graph.  (line  31)
* Pass:                                  Signals.             (line  47)
* Paste <1>:                             Deleting Displays.   (line  40)
* Paste:                                 Edit Menu.           (line  39)
* Perl Console:                          View Menu.           (line  17)
* Perl Reference <1>:                    Getting Help.        (line  41)
* Perl Reference:                        Help Menu.           (line  31)
* Perl Settings:                         Edit Menu.           (line  66)
* Placement <1>:                         Clustering.          (line  35)
* Placement:                             Placement.           (line   6)
* Plot <1>:                              Gnuplot Invocation.  (line   6)
* Plot <2>:                              Plot Appearance.     (line  15)
* Plot:                                  Tool Bar.            (line  82)
* Plot Window:                           Gnuplot Invocation.  (line  13)
* Portrait:                              Printing Plots.      (line  20)
* Preferences:                           Edit Menu.           (line  62)
* Previous:                              Commands Menu.       (line  17)
* Print <1>:                             Printing Values.     (line   6)
* Print <2>:                             Signals.             (line  41)
* Print <3>:                             Editing all Watchpoints.
                                                              (line  10)
* Print <4>:                             Editing Watchpoint Properties.
                                                              (line  10)
* Print:                                 Tool Bar.            (line  74)
* Print ():                              Data Menu.           (line  21)
* Print Command:                         Printing the Graph.  (line   9)
* Print Graph <1>:                       Printing the Graph.  (line   9)
* Print Graph:                           File Menu.           (line  44)
* Print Plot:                            Printing Plots.      (line   6)
* Program <1>:                           Program Menu.        (line   6)
* Program:                               Menu Bar.            (line  22)
* PYDB Console:                          View Menu.           (line  17)
* PYDB Reference <1>:                    Getting Help.        (line  41)
* PYDB Reference:                        Help Menu.           (line  31)
* PYDB Settings:                         Edit Menu.           (line  66)
* Quit Search:                           Commands Menu.       (line  33)
* Record <1>:                            GDB Simple Commands. (line  18)
* Record:                                Breakpoint Commands. (line  22)
* Red Background:                        Applying Data Themes to Several Values.
                                                              (line  17)
* Redo <1>:                              Undoing Program Execution.
                                                              (line  23)
* Redo <2>:                              Looking up Previous Locations.
                                                              (line   6)
* Redo <3>:                              Undo and Redo.       (line   9)
* Redo <4>:                              Command Tool.        (line  94)
* Redo:                                  Edit Menu.           (line  15)
* Refer to Program Sources:              Customizing Source Lookup.
                                                              (line   6)
* Refresh:                               Data Menu.           (line  57)
* Refresh Displays <1>:                  Repeated Values.     (line  12)
* Refresh Displays:                      Refreshing the Data Window.
                                                              (line  15)
* Registers <1>:                         Registers.           (line   6)
* Registers:                             Status Menu.         (line  13)
* Reload Source <1>:                     Editing Source Code. (line  18)
* Reload Source:                         Source Menu.         (line  46)
* Remove Menu:                           Maintenance Menu.    (line  42)
* Reset:                                 Signals.             (line  57)
* Restart:                               File Menu.           (line  59)
* Rotate:                                Tool Bar.            (line  89)
* Rotate Graph <1>:                      Rotating the Graph.  (line   6)
* Rotate Graph:                          Data Menu.           (line  49)
* Run <1>:                               Starting Program Execution.
                                                              (line   6)
* Run <2>:                               Command Tool.        (line  30)
* Run:                                   Program Menu.        (line  13)
* Run Again <1>:                         Starting Program Execution.
                                                              (line  12)
* Run Again:                             Program Menu.        (line  17)
* Run in Execution Window <1>:           Using the Execution Window.
                                                              (line   6)
* Run in Execution Window:               Program Menu.        (line  21)
* Save Data As:                          Exporting Plot Data. (line   6)
* Save Options <1>:                      Signals.             (line  80)
* Save Options:                          Edit Menu.           (line  70)
* Save Session As <1>:                   Signals.             (line  80)
* Save Session As <2>:                   File Menu.           (line  32)
* Save Session As:                       Saving Sessions.     (line   6)
* Scale:                                 Plot Appearance.     (line  18)
* Search path for source files:          Source Path.         (line  26)
* Select All:                            Edit Menu.           (line  57)
* Selected Only <1>:                     Printing Plots.      (line  33)
* Selected Only:                         Printing the Graph.  (line  27)
* Send:                                  Signals.             (line  67)
* Set <1>:                               Assignment.          (line   6)
* Set:                                   Tool Bar.            (line  93)
* Set Execution Position:                Continuing Somewhere Else.
                                                              (line  14)
* Set Temporary Breakpoint:              Temporary Breakpoints.
                                                              (line   9)
* Set Value:                             Assignment.          (line  15)
* Show <1>:                              Showing and Hiding Details.
                                                              (line  10)
* Show:                                  Tool Bar.            (line  85)
* Show All:                              Showing and Hiding Details.
                                                              (line  31)
* Show Just:                             Showing and Hiding Details.
                                                              (line  27)
* Show More:                             Showing and Hiding Details.
                                                              (line  22)
* Show Position and Breakpoints:         Customizing Glyphs.  (line   6)
* Signals <1>:                           Signals.             (line  26)
* Signals:                               Status Menu.         (line  20)
* Small Titles:                          Using Data Themes.   (line  14)
* Small Values:                          Using Data Themes.   (line  17)
* Source <1>:                            Source Menu.         (line   6)
* Source:                                Menu Bar.            (line  34)
* Source indentation:                    Customizing Source Appearance.
                                                              (line  13)
* Source Window:                         View Menu.           (line  21)
* Status <1>:                            Status Menu.         (line   6)
* Status:                                Menu Bar.            (line  30)
* Status Displays <1>:                   Displaying Program Status.
                                                              (line  20)
* Status Displays:                       Data Menu.           (line  41)
* Step <1>:                              Resuming Execution.  (line  16)
* Step <2>:                              Command Tool.        (line  40)
* Step:                                  Program Menu.        (line  25)
* Step Instruction <1>:                  Machine Code Execution.
                                                              (line  10)
* Step Instruction:                      Program Menu.        (line  30)
* Stepi <1>:                             Machine Code Execution.
                                                              (line  10)
* Stepi:                                 Command Tool.        (line  45)
* Stop:                                  Signals.             (line  37)
* Suppress Values <1>:                   Using Data Themes.   (line  23)
* Suppress Values:                       Deleting Displays.   (line  13)
* Suppress X warnings:                   X Warnings.          (line   6)
* Tab Width:                             Customizing Source Appearance.
                                                              (line  35)
* Temp:                                  Editing Breakpoint Properties.
                                                              (line  20)
* Theme:                                 Using Data Themes.   (line  27)
* Themes:                                Editing Themes.      (line  31)
* Threads <1>:                           Threads.             (line  19)
* Threads:                               Status Menu.         (line  17)
* Threshold for repeated print elements: Repeated Values.     (line  12)
* Tic Tac Toe:                           Maintenance Menu.    (line  22)
* Tiny Values:                           Using Data Themes.   (line  20)
* Tip of the Day:                        Help Menu.           (line  22)
* Tool Bar Appearance:                   Window Layout.       (line  23)
* Tool Buttons Location:                 Disabling the Command Tool.
                                                              (line   6)
* Top to bottom:                         Placement.           (line   6)
* Uncluster:                             Clustering.          (line  31)
* Uncompress:                            Help Helpers.        (line   9)
* Undisp <1>:                            Deleting Displays.   (line   6)
* Undisp:                                Tool Bar.            (line  96)
* Undisplay:                             Display Basics.      (line  13)
* Undo <1>:                              Deleting Displays.   (line  37)
* Undo <2>:                              Showing and Hiding Details.
                                                              (line  67)
* Undo <3>:                              Undoing Program Execution.
                                                              (line  23)
* Undo <4>:                              Selecting a frame.   (line  23)
* Undo <5>:                              Looking up Previous Locations.
                                                              (line   6)
* Undo <6>:                              Undo and Redo.       (line   6)
* Undo <7>:                              Command Tool.        (line  90)
* Undo:                                  Edit Menu.           (line  11)
* Undo Buffer Size:                      Customizing Undo.    (line   8)
* Uniconify When Ready:                  Program Stop.        (line  22)
* Until <1>:                             Resuming Execution.  (line  58)
* Until <2>:                             Command Tool.        (line  60)
* Until:                                 Program Menu.        (line  45)
* Unwatch:                               Tool Bar.            (line  68)
* Up <1>:                                Selecting a frame.   (line  13)
* Up <2>:                                Command Tool.        (line  79)
* Up:                                    Status Menu.         (line  24)
* View <1>:                              Plot Appearance.     (line  12)
* View <2>:                              View Menu.           (line   6)
* View:                                  Menu Bar.            (line  19)
* Warn if Multiple DDD Instances are Running: Multiple Instances.
                                                              (line  20)
* Watch <1>:                             Editing Watchpoint Properties.
                                                              (line   6)
* Watch <2>:                             Setting Watchpoints. (line  11)
* Watch:                                 Tool Bar.            (line  63)
* Watchpoints:                           Data Menu.           (line  14)
* Web Browser:                           Help Helpers.        (line  18)
* What Now? <1>:                         Getting Help.        (line  31)
* What Now?:                             Help Menu.           (line  19)
* When DDD Crashes:                      Maintenance Menu.    (line  27)
* Window Layout:                         Window Layout.       (line   6)
* Writing into executable and core files: Patching.           (line  16)
* XDB Console:                           View Menu.           (line  17)
* XDB Reference <1>:                     Getting Help.        (line  41)
* XDB Reference:                         Help Menu.           (line  31)
* XDB Settings:                          Edit Menu.           (line  66)


File: ddd.info,  Node: Key Index,  Next: Command Index,  Prev: Label Index,  Up: Top

Key Index
*********

 [index ]
* Menu:

* Alt+1:                                 View Menu.            (line 17)
* Alt+2:                                 View Menu.            (line 21)
* Alt+3:                                 View Menu.            (line 24)
* Alt+4 <1>:                             Source Menu.          (line 38)
* Alt+4:                                 View Menu.            (line 28)
* Alt+8:                                 View Menu.            (line  9)
* Alt+9:                                 View Menu.            (line 13)
* Alt+A:                                 Data Menu.            (line 29)
* Alt+G:                                 Data Menu.            (line 45)
* Alt+I:                                 Source Menu.          (line 30)
* Alt+L:                                 Data Menu.            (line 33)
* Alt+N:                                 Source Menu.          (line 34)
* Alt+R:                                 Data Menu.            (line 49)
* Alt+U:                                 Data Menu.            (line 37)
* Alt+W:                                 Source Menu.          (line 26)
* Alt+Y:                                 Data Menu.            (line 53)
* Ctrl+,:                                Source Menu.          (line 22)
* Ctrl+-:                                Data Menu.            (line 25)
* Ctrl+.:                                Source Menu.          (line 18)
* Ctrl+/:                                Source Menu.          (line 14)
* Ctrl+=:                                Data Menu.            (line 21)
* Ctrl+\ <1>:                            Program Menu.         (line 76)
* Ctrl+\:                                Quitting.             (line 17)
* Ctrl+A:                                Edit Menu.            (line 57)
* Ctrl+B <1>:                            Command History.      (line 15)
* Ctrl+B:                                Commands Menu.        (line 25)
* Ctrl+C <1>:                            Interrupting.         (line  6)
* Ctrl+C <2>:                            Customizing the Edit Menu.
                                                               (line  9)
* Ctrl+C <3>:                            Program Menu.         (line 70)
* Ctrl+C <4>:                            Edit Menu.            (line 29)
* Ctrl+C:                                Quitting.             (line 22)
* Ctrl+D:                                Quitting.             (line  6)
* Ctrl+Down <1>:                         Selecting a frame.    (line 19)
* Ctrl+Down:                             Status Menu.          (line 30)
* Ctrl+F <1>:                            Command History.      (line 15)
* Ctrl+F:                                Commands Menu.        (line 29)
* Ctrl+F1:                               Getting Help.         (line 31)
* Ctrl+Ins:                              Edit Menu.            (line 29)
* Ctrl+L:                                Data Menu.            (line 57)
* Ctrl+M:                                File Menu.            (line 52)
* Ctrl+N:                                File Menu.            (line 28)
* Ctrl+O:                                File Menu.            (line 12)
* Ctrl+Q <1>:                            File Menu.            (line 62)
* Ctrl+Q <2>:                            Quitting.             (line  6)
* Ctrl+Q:                                Invocation.           (line 11)
* Ctrl+S:                                File Menu.            (line 32)
* Ctrl+Shift+A <1>:                      Customizing the Edit Menu.
                                                               (line 30)
* Ctrl+Shift+A:                          Edit Menu.            (line 57)
* Ctrl+U <1>:                            Commands Menu.        (line 45)
* Ctrl+U:                                Edit Menu.            (line 47)
* Ctrl+Up <1>:                           Selecting a frame.    (line 19)
* Ctrl+Up:                               Status Menu.          (line 24)
* Ctrl+V:                                Edit Menu.            (line 39)
* Ctrl+W:                                File Menu.            (line 56)
* Ctrl+X:                                Edit Menu.            (line 19)
* Ctrl+Y:                                Edit Menu.            (line 15)
* Ctrl+Z:                                Edit Menu.            (line 11)
* Down <1>:                              Command History.      (line  6)
* Down <2>:                              Moving Displays.      (line 21)
* Down <3>:                              Selecting Displays.   (line 17)
* Down:                                  Commands Menu.        (line 21)
* ESC <1>:                               Command History.      (line 15)
* ESC <2>:                               Interrupting.         (line  6)
* ESC:                                   Customizing the Edit Menu.
                                                               (line 13)
* Esc <1>:                               Commands Menu.        (line 33)
* Esc:                                   Program Menu.         (line 70)
* ESC:                                   Quitting.             (line 11)
* F1:                                    Getting Help.         (line 20)
* F12:                                   Maintenance Menu.     (line 14)
* F2:                                    Program Menu.         (line 13)
* F3:                                    Program Menu.         (line 17)
* F4:                                    Program Menu.         (line 66)
* F5:                                    Program Menu.         (line 25)
* F6:                                    Program Menu.         (line 34)
* F7:                                    Program Menu.         (line 45)
* F8:                                    Program Menu.         (line 50)
* F9:                                    Program Menu.         (line 55)
* Home:                                  Customizing the Edit Menu.
                                                               (line 25)
* Left <1>:                              Moving Displays.      (line 21)
* Left:                                  Selecting Displays.   (line 17)
* Return <1>:                            Command History.      (line  6)
* Return:                                Commands Menu.        (line 41)
* Right <1>:                             Moving Displays.      (line 21)
* Right:                                 Selecting Displays.   (line 17)
* Shift:                                 Selecting Displays.   (line 13)
* Shift+Ctrl+L:                          Source Menu.          (line 46)
* Shift+Ctrl+U:                          Commands Menu.        (line 49)
* Shift+Ctrl+V:                          Source Menu.          (line 42)
* Shift+Del:                             Edit Menu.            (line 19)
* Shift+F5:                              Program Menu.         (line 30)
* Shift+F6:                              Program Menu.         (line 40)
* Shift+F9:                              Program Menu.         (line 60)
* Shift+Ins:                             Edit Menu.            (line 39)
* TAB:                                   Tool Bar.             (line 22)
* Tab:                                   Commands Menu.        (line 37)
* Up <1>:                                Command History.      (line  6)
* Up <2>:                                Moving Displays.      (line 21)
* Up <3>:                                Selecting Displays.   (line 17)
* Up:                                    Commands Menu.        (line 17)


File: ddd.info,  Node: Command Index,  Next: Resource Index,  Prev: Key Index,  Up: Top

Command Index
*************

 [index ]
* Menu:

* cont <1>:                              Undoing Program Execution.
                                                               (line 43)
* cont:                                  Customizing Grab Checking.
                                                               (line 20)
* contuntil:                             GDB Argument Commands.
                                                               (line 22)
* directory:                             Source Path.          (line 50)
* down:                                  Selecting a frame.    (line 19)
* file:                                  Remote Program.       (line 16)
* gcore:                                 Customizing Sessions. (line 10)
* gd:                                    Commands with Other Debuggers.
                                                               (line 30)
* graph apply theme:                     Applying Data Themes to Several Values.
                                                               (line 27)
* graph disable display:                 Showing and Hiding Details.
                                                               (line 53)
* graph display <1>:                     Displaying Program Status.
                                                               (line  9)
* graph display:                         Creating Single Displays.
                                                               (line 23)
* graph enable display:                  Showing and Hiding Details.
                                                               (line 57)
* graph plot:                            Plotting Arrays.      (line 31)
* graph refresh:                         Refreshing the Data Window.
                                                               (line 23)
* graph toggle theme:                    Applying Data Themes to Several Values.
                                                               (line 33)
* graph unapply theme:                   Applying Data Themes to Several Values.
                                                               (line 30)
* gunzip:                                Help Helpers.         (line 12)
* gzip:                                  Help Helpers.         (line 12)
* hbreak:                                Hardware-Assisted Breakpoints.
                                                               (line 10)
* help:                                  Getting Help.         (line 27)
* kill:                                  Customizing Grab Checking.
                                                               (line 20)
* mwm:                                   Gnuplot Invocation.   (line 20)
* print:                                 Printing Values.      (line 16)
* quit <1>:                              Customizing Grab Checking.
                                                               (line 20)
* quit:                                  Quitting.             (line  6)
* remsh:                                 Remote Debugger.      (line  6)
* replot:                                Entering Plotting Commands.
                                                               (line 21)
* rsh:                                   Remote Debugger.      (line  6)
* run:                                   Starting Program Execution.
                                                               (line 12)
* set environment:                       Environment.          (line 10)
* set output:                            Entering Plotting Commands.
                                                               (line 27)
* set term:                              Entering Plotting Commands.
                                                               (line 27)
* target remote:                         Remote Program.       (line 20)
* thbreak:                               Hardware-Assisted Breakpoints.
                                                               (line 17)
* tty:                                   Debugger Communication.
                                                               (line 69)
* unset environment:                     Environment.          (line 10)
* up:                                    Selecting a frame.    (line 19)
* zcat:                                  Help Helpers.         (line 12)


File: ddd.info,  Node: Resource Index,  Next: File Index,  Prev: Command Index,  Up: Top

Resource Index
**************

 [index ]
* Menu:

* activeButtonColorKey:                  Customizing the Tool Bar.
                                                              (line  36)
* align2dArrays:                         Arrays as Tables.    (line  12)
* appDefaultsVersion:                    Customizing Diagnostics.
                                                              (line  10)
* arrayOrientation:                      Rotating Displays.   (line  22)
* autoCloseDataWindow:                   Display Resources.   (line   9)
* autoDebugger:                          Debugger Invocation. (line  20)
* autoRaiseMenu:                         Auto-Raise Menus.    (line   9)
* autoRaiseMenuDelay:                    Auto-Raise Menus.    (line  15)
* autoRaiseTool:                         Customizing Tool Position.
                                                              (line  10)
* bash:                                  Bash Initialization. (line  13)
* bashDisplayShortcuts:                  Display Shortcuts.   (line  79)
* bashInitCommands:                      Bash Initialization. (line   7)
* blockTTYInput:                         Debugger Communication.
                                                              (line  10)
* break_at:                              Images.              (line  18)
* bufferGDBOutput:                       Debugger Communication.
                                                              (line  17)
* bumpDisplays:                          Display Resources.   (line  15)
* buttonCaptionGeometry:                 Customizing the Tool Bar.
                                                              (line  47)
* buttonCaptions:                        Customizing the Tool Bar.
                                                              (line  41)
* buttonColorKey:                        Customizing the Tool Bar.
                                                              (line  61)
* buttonDocs:                            Button tips.         (line  21)
* buttonImageGeometry:                   Customizing the Tool Bar.
                                                              (line  57)
* buttonImages:                          Customizing the Tool Bar.
                                                              (line  51)
* buttonTips:                            Button tips.         (line  18)
* cacheGlyphImages:                      Customizing Glyphs.  (line  24)
* cacheMachineCode:                      Customizing Machine Code.
                                                              (line  18)
* cacheSourceFiles:                      Customizing Source Lookup.
                                                              (line  26)
* checkConfiguration:                    Customizing Diagnostics.
                                                              (line  15)
* checkGrabDelay:                        Customizing Grab Checking.
                                                              (line  14)
* checkGrabs:                            Customizing Grab Checking.
                                                              (line   9)
* checkOptions:                          Multiple Instances.  (line  14)
* CLASSPATH:                             Source Path.         (line  34)
* clear_at:                              Images.              (line  21)
* clusterDisplays:                       Display Resources.   (line  21)
* commandToolBar:                        Disabling the Command Tool.
                                                              (line  13)
* commonToolBar:                         Window Layout.       (line  45)
* consoleButtons:                        Customizing Buttons. (line  11)
* consoleHasFocus:                       Typing in the Source Window.
                                                              (line  13)
* contInterruptDelay:                    Debugger Communication.
                                                              (line  28)
* cutCopyPasteBindings:                  Customizing the Edit Menu.
                                                              (line  37)
* dataButtons:                           Customizing Buttons. (line  86)
* dataFont:                              Customizing Fonts.   (line 117)
* dataFontSize:                          Customizing Fonts.   (line 131)
* dbxDisplayShortcuts:                   Display Shortcuts.   (line  54)
* dbxInitCommands:                       DBX Initialization.  (line   7)
* dbxSettings:                           DBX Initialization.  (line  15)
* ddd:                                   Images.              (line  24)
* DDD:                                   Environment.         (line  18)
* DDD_NO_SIGNAL_HANDLERS:                Debugging DDD.       (line  21)
* DDD_SESSION:                           Resources.           (line  28)
* DDD_SESSIONS:                          Customizing Sessions.
                                                              (line   6)
* DDD_STATE:                             Resources.           (line  15)
* dddinitVersion:                        Customizing Diagnostics.
                                                              (line  20)
* debugCoreDumps:                        Customizing Diagnostics.
                                                              (line  25)
* debugger:                              Debugger Invocation. (line  27)
* debuggerCommand:                       Debugger Invocation. (line  35)
* decorateTool:                          Customizing Tool Decoration.
                                                              (line  10)
* defaultFont:                           Customizing Fonts.   (line  54)
* defaultFontSize:                       Customizing Fonts.   (line  69)
* delete:                                Images.              (line  27)
* deleteAliasDisplays:                   Shared Structures.   (line  72)
* detectAliases:                         Shared Structures.   (line  78)
* disable:                               Images.              (line  30)
* disassemble:                           Customizing Machine Code.
                                                              (line  10)
* display:                               Images.              (line  36)
* DISPLAY <1>:                           Remote Host.         (line  14)
* DISPLAY:                               X Options.           (line  10)
* displayGlyphs:                         Customizing Glyphs.  (line  16)
* displayLineNumbers:                    Customizing Source Appearance.
                                                              (line  10)
* displayPlacement:                      Placement.           (line  14)
* displayTimeout:                        Debugger Communication.
                                                              (line  34)
* dispref:                               Images.              (line  33)
* drag_arrow:                            Images.              (line  39)
* drag_cond:                             Images.              (line  42)
* drag_stop:                             Images.              (line  45)
* drag_temp:                             Images.              (line  48)
* dumpCore:                              Customizing Diagnostics.
                                                              (line  29)
* editCommand:                           Customizing Editing. (line  10)
* EDITOR:                                Customizing Editing. (line  10)
* enable:                                Images.              (line  51)
* expandRepeatedValues:                  Repeated Values.     (line  22)
* filterFiles:                           Customizing File Filtering.
                                                              (line   9)
* find_backward:                         Images.              (line  57)
* find_forward:                          Images.              (line  54)
* findCaseSensitive:                     Customizing Searching.
                                                              (line  10)
* findWordsOnly:                         Customizing Searching.
                                                              (line  14)
* fixedWidthFont:                        Customizing Fonts.   (line  95)
* fixedWidthFontSize:                    Customizing Fonts.   (line 111)
* flatDialogButtons:                     Customizing the Tool Bar.
                                                              (line  72)
* flatToolbarButtons:                    Customizing the Tool Bar.
                                                              (line  66)
* fontSelectCommand:                     Customizing Fonts.   (line 146)
* gdbDisplayShortcuts:                   Display Shortcuts.   (line  64)
* gdbInitCommands:                       GDB Initialization.  (line   7)
* gdbSettings:                           GDB Initialization.  (line  28)
* getCoreCommand:                        Customizing Sessions.
                                                              (line  18)
* globalTabCompletion:                   Command Completion.  (line 102)
* glyphUpdateDelay:                      Customizing Glyphs.  (line  31)
* grabAction:                            Customizing Grab Checking.
                                                              (line  20)
* grabActionDelay:                       Customizing Grab Checking.
                                                              (line  26)
* grey_arrow:                            Images.              (line  60)
* grey_cond:                             Images.              (line  63)
* grey_stop:                             Images.              (line  66)
* grey_temp:                             Images.              (line  69)
* groupIconify:                          Icons.               (line  14)
* hide:                                  Images.              (line  72)
* hideInactiveDisplays:                  Display Resources.   (line  26)
* indentCode:                            Customizing Machine Code.
                                                              (line  26)
* indentScript:                          Customizing Source Appearance.
                                                              (line  25)
* indentSource:                          Customizing Source Appearance.
                                                              (line  19)
* initSymbols:                           Finding a Place to Start.
                                                              (line   7)
* jdbDisplayShortcuts:                   Display Shortcuts.   (line  69)
* jdbInitCommands:                       JDB Initialization.  (line   7)
* jdbSettings:                           JDB Initialization.  (line  12)
* labelDelimiter:                        Customizing Buttons. (line 152)
* lessTifVersion:                        LessTif.             (line  15)
* lineBufferedConsole:                   Input/Output.        (line  47)
* lineNumberWidth:                       Customizing Source Appearance.
                                                              (line  31)
* linesAboveCursor:                      Customizing Source Scrolling.
                                                              (line   9)
* linesBelowCursor:                      Customizing Source Scrolling.
                                                              (line  13)
* listCoreCommand:                       Customizing Remote Debugging.
                                                              (line  16)
* listDirCommand:                        Customizing Remote Debugging.
                                                              (line  23)
* listExecCommand:                       Customizing Remote Debugging.
                                                              (line  30)
* listSourceCommand:                     Customizing Remote Debugging.
                                                              (line  40)
* lookup:                                Images.              (line  75)
* maintenance:                           Customizing Diagnostics.
                                                              (line  33)
* maketemp:                              Images.              (line  78)
* maxDisassemble:                        Customizing Machine Code.
                                                              (line  37)
* maxGlyphs:                             Customizing Glyphs.  (line  37)
* maxUndoDepth:                          Customizing Undo.    (line  22)
* maxUndoSize:                           Customizing Undo.    (line  14)
* new_break:                             Images.              (line  81)
* new_display:                           Images.              (line  84)
* new_watch:                             Images.              (line  87)
* openDataWindow:                        Toggling Windows.    (line  16)
* openDebuggerConsole:                   Toggling Windows.    (line  19)
* openSelection:                         Opening the Selection.
                                                              (line   7)
* openSourceWindow:                      Toggling Windows.    (line  22)
* PAGER <1>:                             Customizing Diagnostics.
                                                              (line  57)
* PAGER:                                 Environment.         (line  30)
* pannedGraphEditor:                     Scrolling Data.      (line  17)
* paperSize:                             Printing the Graph.  (line  40)
* perlDisplayShortcuts:                  Display Shortcuts.   (line  74)
* perlInitCommands:                      Perl Initialization. (line   7)
* perlSettings:                          Perl Initialization. (line  13)
* plain_arrow:                           Images.              (line  90)
* plain_cond:                            Images.              (line  93)
* plain_stop:                            Images.              (line  96)
* plain_temp:                            Images.              (line  99)
* plot2dSettings:                        Gnuplot Settings.    (line  23)
* plot3dSettings:                        Gnuplot Settings.    (line  27)
* plotCommand:                           Gnuplot Invocation.  (line  10)
* plotInitCommands:                      Gnuplot Settings.    (line   9)
* plotTermType:                          Gnuplot Invocation.  (line  19)
* plotWindowClass:                       Gnuplot Invocation.  (line  33)
* plotWindowDelay:                       Gnuplot Invocation.  (line  39)
* popdownHistorySize:                    Text Fields.         (line   9)
* positionTimeout:                       Debugger Communication.
                                                              (line  38)
* print:                                 Images.              (line 102)
* printCommand:                          Printing the Graph.  (line  37)
* properties:                            Images.              (line 105)
* psCommand:                             Customizing Attaching to Processes.
                                                              (line  11)
* pydbDisplayShortcuts:                  Display Shortcuts.   (line  84)
* pydbInitCommands:                      PYDB Initialization. (line   7)
* pydbSettings:                          PYDB Initialization. (line  13)
* questionTimeout:                       Debugger Communication.
                                                              (line  42)
* rotate:                                Images.              (line 108)
* rshCommand:                            Customizing Remote Debugging.
                                                              (line  12)
* runInterruptDelay:                     Debugger Communication.
                                                              (line  46)
* saveHistoryOnExit:                     Command History.     (line  25)
* saveOptionsOnExit:                     Saving Options.      (line  16)
* selectAllBindings:                     Customizing the Edit Menu.
                                                              (line  49)
* separateDataWindow:                    Window Layout.       (line  14)
* separateExecWindow:                    Customizing the Execution Window.
                                                              (line  30)
* separateSourceWindow:                  Window Layout.       (line  19)
* set:                                   Images.              (line 111)
* SHELL:                                 Arguments.           (line   9)
* show:                                  Images.              (line 114)
* showBaseDisplayTitles:                 Display Resources.   (line  31)
* showConfiguration:                     Customizing Diagnostics.
                                                              (line  38)
* showDependentDisplayTitles:            Display Resources.   (line  35)
* showFonts:                             Customizing Diagnostics.
                                                              (line  42)
* showInvocation:                        Customizing Diagnostics.
                                                              (line  46)
* showLicense:                           Customizing Diagnostics.
                                                              (line  50)
* showManual:                            Customizing Diagnostics.
                                                              (line  54)
* showMemberNames:                       Rotating Displays.   (line  26)
* showNews:                              Customizing Diagnostics.
                                                              (line  60)
* showVersion:                           Customizing Diagnostics.
                                                              (line  64)
* signal_arrow:                          Images.              (line 117)
* sortPopdownHistory:                    Text Fields.         (line  14)
* sourceButtons:                         Customizing Buttons. (line  93)
* sourceEditing:                         In-Place Editing.    (line   9)
* sourceInitCommands:                    GDB Initialization.  (line  37)
* splashScreen:                          Splash Screen.       (line  14)
* splashScreenColorKey:                  Splash Screen.       (line  20)
* startupTipCount:                       Tip of the day.      (line  21)
* startupTips:                           Tip of the day.      (line  12)
* statusAtBottom:                        Window Layout.       (line  54)
* stickyTool:                            Customizing Tool Position.
                                                              (line  16)
* stopAndContinue:                       Debugger Communication.
                                                              (line  51)
* structOrientation:                     Rotating Displays.   (line  29)
* suppressTheme:                         Display Resources.   (line  39)
* suppressWarnings <1>:                  Customizing Diagnostics.
                                                              (line  68)
* suppressWarnings:                      X Warnings.          (line  12)
* synchronousDebugger:                   Debugger Communication.
                                                              (line  58)
* tabWidth:                              Customizing Source Appearance.
                                                              (line  40)
* TERM <1>:                              Customizing the Execution Window.
                                                              (line  24)
* TERM:                                  Environment.         (line  23)
* TERMCAP:                               Environment.         (line  27)
* termCommand:                           Customizing the Execution Window.
                                                              (line  11)
* terminateOnEOF:                        Debugger Communication.
                                                              (line  63)
* termType:                              Customizing the Execution Window.
                                                              (line  22)
* themes:                                Display Resources.   (line  43)
* tip:                                   Tip of the day.      (line  25)
* toolbarsAtBottom:                      Window Layout.       (line  31)
* toolButtons:                           Customizing Buttons. (line 130)
* toolRightOffset:                       Customizing Tool Position.
                                                              (line  23)
* toolTopOffset:                         Customizing Tool Position.
                                                              (line  27)
* trace:                                 Customizing Diagnostics.
                                                              (line  74)
* typedAliases:                          Shared Structures.   (line  82)
* uncompressCommand:                     Help Helpers.        (line  12)
* undisplay:                             Images.              (line 120)
* uniconifyWhenReady:                    Icons.               (line  28)
* unwatch:                               Images.              (line 123)
* useSourcePath:                         Customizing Source Lookup.
                                                              (line  14)
* useTTYCommand:                         Debugger Communication.
                                                              (line  69)
* valueDocs:                             Value Tips.          (line  27)
* valueTips:                             Value Tips.          (line  22)
* variableWidthFont:                     Customizing Fonts.   (line  74)
* variableWidthFontSize:                 Customizing Fonts.   (line  89)
* verifyButtons:                         Customizing Buttons. (line 156)
* vslBaseDefs:                           VSL Resources.       (line   9)
* vslDefs:                               VSL Resources.       (line  15)
* vslLibrary:                            VSL Resources.       (line  22)
* vslPath:                               VSL Resources.       (line  26)
* warnIfLocked:                          Multiple Instances.  (line  30)
* watch:                                 Images.              (line 126)
* WWWBROWSER:                            Help Helpers.        (line  21)
* wwwCommand:                            Help Helpers.        (line  21)
* wwwPage:                               Help Helpers.        (line  40)
* xdbDisplayShortcuts:                   Display Shortcuts.   (line  89)
* xdbInitCommands:                       XDB Initialization.  (line   7)
* xdbSettings:                           XDB Initialization.  (line  14)
* XEDITOR:                               Customizing Editing. (line  10)


File: ddd.info,  Node: File Index,  Next: Concept Index,  Prev: Resource Index,  Up: Top

File Index
**********

 [index ]
* Menu:

* .emacs:                                Integrating DDD.     (line  39)
* .gdbinit <1>:                          Debugging DDD.       (line  11)
* .gdbinit <2>:                          Remote Program.      (line  22)
* .gdbinit:                              GDB Options.         (line  35)
* ChangeLog:                             Contributors.        (line   6)
* dbx:                                   Options.             (line  77)
* Ddd <1>:                               Application Defaults.
                                                              (line   6)
* Ddd <2>:                               More Customizations. (line   6)
* Ddd:                                   Resources.           (line  18)
* ddd-3.3.11-html-manual.tar.gz:         About this Manual.   (line  37)
* ddd-3.3.11-pics.tar.gz:                About this Manual.   (line  47)
* ddd-3.3.11.tar.gz:                     About this Manual.   (line  13)
* ddd-VERSION-html-manual.tar.gz:        Getting DDD.         (line  14)
* ddd-VERSION-pics.tar.gz:               Getting DDD.         (line  18)
* ddd-VERSION.tar.gz:                    Getting DDD.         (line  11)
* emacs <1>:                             Integrating DDD.     (line  31)
* emacs <2>:                             Customizing Editing. (line  24)
* emacs:                                 Help Helpers.        (line  21)
* emacsclient:                           Customizing Editing. (line  24)
* emacsserver:                           Customizing Editing. (line  24)
* fig2dev:                               Printing the Graph.  (line  23)
* file:                                  Customizing Remote Debugging.
                                                              (line  19)
* gdb:                                   Options.             (line  77)
* gdbserver:                             Remote Program.      (line  14)
* gnuclient:                             Customizing Editing. (line  19)
* gnudoit:                               Help Helpers.        (line  21)
* gnuplot:                               Plot Appearance.     (line   6)
* gnuserv:                               Customizing Editing. (line  19)
* init:                                  Resources.           (line  10)
* java.prof:                             JDB Options.         (line  98)
* jdb:                                   Options.             (line  77)
* ladebug:                               Options.             (line  77)
* less:                                  Customizing Diagnostics.
                                                              (line  57)
* log <1>:                               Logging.             (line   6)
* log <2>:                               Entering Plotting Commands.
                                                              (line  39)
* log:                                   Options.             (line 365)
* lynx:                                  Help Helpers.        (line  21)
* make:                                  Recompiling.         (line   6)
* more:                                  Customizing Diagnostics.
                                                              (line  57)
* mosaic:                                Help Helpers.        (line  21)
* mozilla:                               Help Helpers.        (line  21)
* netscape:                              Help Helpers.        (line  21)
* on:                                    Customizing Remote Debugging.
                                                              (line  13)
* perl:                                  Options.             (line  77)
* ps:                                    Customizing Attaching to Processes.
                                                              (line  11)
* pydb:                                  Options.             (line  77)
* remsh:                                 Customizing Remote Debugging.
                                                              (line  13)
* rsh:                                   Customizing Remote Debugging.
                                                              (line  13)
* sample:                                Sample Session.      (line  10)
* sample.c <1>:                          Sample Program.      (line   6)
* sample.c:                              Sample Session.      (line  10)
* sessions:                              Customizing Sessions.
                                                              (line   6)
* ssh:                                   Customizing Remote Debugging.
                                                              (line  13)
* stty:                                  Input/Output.        (line  38)
* suppress.vsl:                          Display Resources.   (line  39)
* TODO:                                  Contributors.        (line   6)
* transfig:                              Printing the Graph.  (line  23)
* vi:                                    Customizing Editing. (line  10)
* wdb:                                   Options.             (line  77)
* xdb:                                   Options.             (line  77)
* xemacs <1>:                            Integrating DDD.     (line  39)
* xemacs <2>:                            Customizing Editing. (line  19)
* xemacs:                                Help Helpers.        (line  21)
* xfig:                                  Printing the Graph.  (line  23)
* xfontsel:                              Customizing Fonts.   (line 153)
* xmgr:                                  Exporting Plot Data. (line   6)
* xsm:                                   Resuming Sessions.   (line  41)
* xterm:                                 Customizing the Execution Window.
                                                              (line  18)
* xxgdb:                                 Integrating DDD.     (line  53)
* ~ <1>:                                 Resources.           (line  10)
* ~:                                     Options.             (line 450)


File: ddd.info,  Node: Concept Index,  Prev: File Index,  Up: Top

Concept Index
*************

 [index ]
* Menu:

* Aborting execution <1>:                Program Menu.        (line  76)
* Aborting execution:                    Quitting.            (line  17)
* Ada:                                   Summary.             (line  30)
* Aliases, detecting:                    Shared Structures.   (line  12)
* Animating plots:                       Animating Plots.     (line   6)
* Arguments, displaying:                 Displaying Local Variables.
                                                              (line   6)
* Arguments, of the debugged program:    Arguments.           (line   6)
* Arguments, program:                    Starting Program Execution.
                                                              (line   6)
* Array slices:                          Array Slices.        (line   6)
* Array, artificial:                     Array Slices.        (line   6)
* Array, plotting:                       Plotting Arrays.     (line   6)
* Artificial arrays:                     Array Slices.        (line   6)
* Assertions and breakpoints:            Breakpoint Conditions.
                                                              (line  13)
* Assertions and watchpoints:            Watchpoints.         (line   6)
* Assignment:                            Assignment.          (line   6)
* Assistance:                            Help and Assistance. (line   6)
* Auto-command:                          Commands with Other Debuggers.
                                                              (line  24)
* Automatic Layout:                      Automatic Layout.    (line  21)
* Balloon help:                          Getting Help.        (line   9)
* Bash:                                  Summary.             (line  65)
* Bash, invoking DDD with:               Choosing an Inferior Debugger.
                                                              (line  24)
* Box library:                           History.             (line  13)
* Breakpoint:                            Stopping.            (line  18)
* Breakpoint commands:                   Breakpoint Commands. (line   6)
* Breakpoint commands, vs. conditions:   Breakpoint Conditions.
                                                              (line  27)
* Breakpoint conditions:                 Breakpoint Conditions.
                                                              (line   6)
* Breakpoint ignore counts:              Breakpoint Ignore Counts.
                                                              (line   6)
* Breakpoint properties:                 Editing Breakpoint Properties.
                                                              (line   6)
* Breakpoint, copying:                   Moving and Copying Breakpoints.
                                                              (line   6)
* Breakpoint, deleting:                  Deleting Breakpoints.
                                                              (line   6)
* Breakpoint, disabling:                 Disabling Breakpoints.
                                                              (line   6)
* Breakpoint, dragging:                  Moving and Copying Breakpoints.
                                                              (line   6)
* Breakpoint, editing:                   Editing Breakpoint Properties.
                                                              (line   6)
* Breakpoint, enabling:                  Disabling Breakpoints.
                                                              (line   6)
* Breakpoint, hardware-assisted:         Hardware-Assisted Breakpoints.
                                                              (line   6)
* Breakpoint, looking up:                Looking up Breakpoints.
                                                              (line   6)
* Breakpoint, moving:                    Moving and Copying Breakpoints.
                                                              (line   6)
* Breakpoint, setting:                   Setting Breakpoints. (line   6)
* Breakpoint, temporary:                 Temporary Breakpoints.
                                                              (line   6)
* Breakpoint, toggling:                  Tool Bar.            (line  46)
* Breakpoints, editing:                  Editing all Breakpoints.
                                                              (line   6)
* Button editor:                         Defining Buttons.    (line  11)
* Button tip:                            Getting Help.        (line   9)
* Button tip, turning off:               Button tips.         (line   6)
* Buttons, defining:                     Defining Buttons.    (line   6)
* C:                                     Summary.             (line  30)
* C++:                                   Summary.             (line  30)
* Call stack:                            Stack.               (line   9)
* Chill:                                 Summary.             (line  30)
* Class, opening:                        Opening Programs.    (line   6)
* Clipboard:                             Edit Menu.           (line   6)
* Clipboard, putting displays:           Deleting Displays.   (line  40)
* Cluster:                               Clustering.          (line   6)
* Cluster, and plotting:                 Scalars and Composites.
                                                              (line  23)
* Clustered display, creating:           Creating Single Displays.
                                                              (line  30)
* Command completion:                    Command Completion.  (line   6)
* Command history:                       Command History.     (line   6)
* Command tool:                          Windows.             (line  22)
* Command, argument:                     GDB Argument Commands.
                                                              (line   6)
* Command, auto:                         Commands with Other Debuggers.
                                                              (line  24)
* Command, breakpoint:                   Breakpoint Commands. (line   6)
* Command, defining:                     Defining Commands.   (line   6)
* Command, defining in GDB:              GDB Simple Commands. (line   6)
* Command, defining with other debuggers: Commands with Other Debuggers.
                                                              (line   6)
* Command, recording:                    GDB Simple Commands. (line  18)
* Command, repeating:                    Command History.     (line   6)
* Command, searching:                    Command History.     (line   6)
* Command, user-defined:                 Defining Commands.   (line   6)
* Command-line debugger:                 Summary.             (line  23)
* Compact Layout:                        Automatic Layout.    (line  15)
* Completion of commands:                Command Completion.  (line   6)
* Completion of quoted strings:          Command Completion.  (line  60)
* Conditions on breakpoints:             Breakpoint Conditions.
                                                              (line   6)
* Context-sensitive help:                Getting Help.        (line  20)
* Continue, at different address:        Continuing Somewhere Else.
                                                              (line   6)
* Continue, one line:                    Resuming Execution.  (line  16)
* Continue, to location:                 Resuming Execution.  (line  51)
* Continue, to next line:                Resuming Execution.  (line  41)
* Continue, until function returns:      Resuming Execution.  (line  81)
* Continue, until greater line is reached: Resuming Execution.
                                                              (line  58)
* Continuing execution:                  Resuming Execution.  (line   9)
* Continuing process execution:          Attaching to a Process.
                                                              (line  13)
* Contour lines, in plots:               Plot Appearance.     (line  21)
* Contributors:                          Contributors.        (line   6)
* Copying displays:                      Deleting Displays.   (line  40)
* Core dump, opening:                    Opening Core Dumps.  (line   6)
* Core file, in sessions:                Saving Sessions.     (line   9)
* Cutting displays:                      Deleting Displays.   (line  40)
* Data Theme:                            Using Data Themes.   (line   6)
* Data Window:                           Displaying Values.   (line   6)
* Data window:                           Windows.             (line   9)
* DBX:                                   Summary.             (line  36)
* DBX, invoking DDD with:                Choosing an Inferior Debugger.
                                                              (line  39)
* Debugger console:                      Windows.             (line  15)
* Debugger, on remote host:              Remote Debugger.     (line   6)
* Debugging DDD:                         Debugging DDD.       (line   6)
* Debugging flags:                       Patching.            (line   6)
* Debugging optimized code:              Compiling for Debugging.
                                                              (line  24)
* Default session:                       Resuming Sessions.   (line  10)
* Deferred display:                      Creating Single Displays.
                                                              (line  44)
* Deferred display, in sessions:         Saving Sessions.     (line  31)
* Deleting displays <1>:                 Deleting Displays.   (line   6)
* Deleting displays:                     Tool Bar.            (line  96)
* Deleting displays, undoing:            Deleting Displays.   (line  37)
* Dependent display:                     Creating Single Displays.
                                                              (line  38)
* Dereferencing:                         Dereferencing Pointers.
                                                              (line   6)
* Detail toggling with Show/Hide:        Tool Bar.            (line  85)
* Detail, hiding:                        Showing and Hiding Details.
                                                              (line  15)
* Detail, showing:                       Showing and Hiding Details.
                                                              (line  10)
* Directory, of the debugged program:    Working Directory.   (line   6)
* Disabled displays:                     Showing and Hiding Details.
                                                              (line  47)
* Disabling displays, undoing:           Showing and Hiding Details.
                                                              (line  67)
* Display:                               Displaying Values.   (line   6)
* Display Editor:                        Editing all Displays.
                                                              (line   6)
* Display name:                          Selecting Displays.  (line   6)
* Display position:                      Creating Single Displays.
                                                              (line  34)
* Display selection:                     Selecting Displays.  (line  13)
* Display title:                         Selecting Displays.  (line   6)
* Display value:                         Selecting Displays.  (line   6)
* Display, aligning on grid:             Aligning Displays.   (line   6)
* Display, clustered:                    Creating Single Displays.
                                                              (line  30)
* Display, clustering:                   Clustering.          (line   6)
* Display, copying:                      Deleting Displays.   (line  40)
* Display, creating <1>:                 Creating Single Displays.
                                                              (line   6)
* Display, creating:                     Tool Bar.            (line  78)
* Display, customizing:                  Customizing Displays.
                                                              (line   6)
* Display, cutting:                      Deleting Displays.   (line  40)
* Display, deferred:                     Creating Single Displays.
                                                              (line  44)
* Display, deleting <1>:                 Deleting Displays.   (line   6)
* Display, deleting:                     Tool Bar.            (line  96)
* Display, dependent <1>:                Dependent Values.    (line   6)
* Display, dependent:                    Creating Single Displays.
                                                              (line  38)
* Display, disabled:                     Showing and Hiding Details.
                                                              (line  47)
* Display, frozen:                       Stopping X Programs. (line   6)
* Display, hiding details:               Showing and Hiding Details.
                                                              (line  15)
* Display, locked:                       Stopping X Programs. (line  25)
* Display, moving:                       Moving Displays.     (line   6)
* Display, pasting:                      Deleting Displays.   (line  40)
* Display, placement:                    Placement.           (line   6)
* Display, plotting the history:         Plotting Histories.  (line   6)
* Display, refreshing:                   Refreshing the Data Window.
                                                              (line   6)
* Display, rotating <1>:                 Rotating Displays.   (line   6)
* Display, rotating:                     Tool Bar.            (line  89)
* Display, selecting:                    Selecting Displays.  (line  10)
* Display, setting <1>:                  Tool Bar.            (line  93)
* Display, setting:                      Remote Host.         (line   6)
* Display, setting when invoking DDD:    X Options.           (line  10)
* Display, showing details:              Showing and Hiding Details.
                                                              (line  10)
* Display, suppressing:                  Deleting Displays.   (line  13)
* Display, toggling detail:              Tool Bar.            (line  85)
* Display, updating:                     Refreshing the Data Window.
                                                              (line   6)
* Displaying values <1>:                 Displaying Values.   (line   6)
* Displaying values:                     Examining Data.      (line  18)
* Displaying values with Display:        Tool Bar.            (line  78)
* Dumping values:                        Examining Data.      (line  29)
* Edge:                                  Dependent Values.    (line   6)
* Edge hint <1>:                         Automatic Layout.    (line  11)
* Edge hint:                             Shared Structures.   (line  26)
* Editing source code:                   Editing Source Code. (line   6)
* Emacs, integrating DDD:                Integrating DDD.     (line  31)
* Emergency repairs:                     Patching.            (line   6)
* Environment, of the debugged program:  Environment.         (line   6)
* EPROM code debugging:                  Hardware-Assisted Breakpoints.
                                                              (line  10)
* Examining memory contents:             Examining Memory.    (line   6)
* Execution position, dragging:          Continuing Somewhere Else.
                                                              (line  18)
* Execution window <1>:                  Using the Execution Window.
                                                              (line   6)
* Execution window:                      Windows.             (line  29)
* Execution, "undoing":                  Undoing Program Execution.
                                                              (line   6)
* Execution, aborting <1>:               Program Menu.        (line  76)
* Execution, aborting:                   Quitting.            (line  17)
* Execution, at different address:       Continuing Somewhere Else.
                                                              (line   6)
* Execution, continuing:                 Resuming Execution.  (line   9)
* Execution, interrupting:               Quitting.            (line  11)
* Execution, interrupting automatically: Debugger Communication.
                                                              (line  51)
* Execution, one line:                   Resuming Execution.  (line  16)
* Execution, to location:                Resuming Execution.  (line  51)
* Execution, to next line:               Resuming Execution.  (line  41)
* Execution, until function returns:     Resuming Execution.  (line  81)
* Execution, until greater line is reached: Resuming Execution.
                                                              (line  58)
* Exiting:                               Quitting.            (line   6)
* Extending display selection:           Selecting Displays.  (line  13)
* FIG file, printing as:                 Printing the Graph.  (line  21)
* Files, opening:                        Opening Files.       (line   6)
* Finding items:                         Tool Bar.            (line  42)
* Fonts:                                 Customizing Fonts.   (line   6)
* FORTRAN:                               Summary.             (line  30)
* Frame <1>:                             Frames.              (line   6)
* Frame:                                 Stack.               (line   9)
* Frame changes, undoing:                Selecting a frame.   (line  23)
* Frame number:                          Frames.              (line  28)
* Frame pointer:                         Frames.              (line  21)
* Frame, selecting:                      Selecting a frame.   (line   6)
* GCC:                                   Compiling for Debugging.
                                                              (line  19)
* GDB:                                   Summary.             (line  30)
* GDB, invoking DDD with:                Choosing an Inferior Debugger.
                                                              (line  35)
* Glyph:                                 Customizing Glyphs.  (line   6)
* GPL:                                   Free Software.       (line   6)
* Grabbed pointer:                       Stopping X Programs. (line   6)
* Graph, printing:                       Printing the Graph.  (line   6)
* Graph, rotating:                       Rotating the Graph.  (line   6)
* Grid, aligning displays:               Aligning Displays.   (line   6)
* Grid, in plots:                        Plot Appearance.     (line  12)
* Help <1>:                              Help and Assistance. (line   6)
* Help:                                  Getting Help.        (line   6)
* Help, in the status line:              Getting Help.        (line  16)
* Help, on buttons:                      Getting Help.        (line   9)
* Help, on commands:                     Getting Help.        (line  27)
* Help, on items:                        Getting Help.        (line  20)
* Help, when stuck:                      Getting Help.        (line  31)
* Hiding display details:                Showing and Hiding Details.
                                                              (line  15)
* Historic mode:                         Undoing Program Execution.
                                                              (line  23)
* History:                               History.             (line   6)
* History, plotting:                     Plotting Histories.  (line   6)
* Host, remote:                          Remote Host.         (line   6)
* HTML manual:                           About this Manual.   (line  33)
* IBMGL file, printing as:               Printing the Graph.  (line  21)
* Icon, invoking DDD as:                 X Options.           (line  17)
* Ignore count:                          Breakpoint Ignore Counts.
                                                              (line   6)
* Indent, source code:                   Customizing Source Appearance.
                                                              (line  13)
* Inferior debugger:                     Summary.             (line  23)
* Info manual:                           About this Manual.   (line   8)
* Initial frame:                         Frames.              (line  12)
* Innermost frame:                       Frames.              (line  12)
* Input of the debugged program:         Input/Output.        (line   6)
* Instruction, stepping:                 Machine Code Execution.
                                                              (line  10)
* Integrating DDD:                       Integrating DDD.     (line   6)
* Interrupting DDD:                      Quitting.            (line  22)
* Interrupting execution:                Quitting.            (line  11)
* Interrupting execution, automatically: Debugger Communication.
                                                              (line  51)
* Invoking:                              Invoking.            (line   6)
* Java:                                  Summary.             (line  55)
* JDB:                                   Summary.             (line  55)
* JDB, invoking DDD with:                Choosing an Inferior Debugger.
                                                              (line  18)
* Jump to different address:             Continuing Somewhere Else.
                                                              (line   6)
* Killing DDD:                           Quitting.            (line  22)
* Killing the debugged program:          Killing the Program. (line   6)
* Ladebug:                               Summary.             (line  44)
* Ladebug, invoking DDD with:            Choosing an Inferior Debugger.
                                                              (line  41)
* License <1>:                           License.             (line   6)
* License:                               Free Software.       (line   6)
* License, Documentation:                Documentation License.
                                                              (line   6)
* License, showing on standard output:   Options.             (line 218)
* Line numbers:                          Customizing Source Appearance.
                                                              (line   6)
* Local variables, displaying:           Displaying Local Variables.
                                                              (line   6)
* Logging:                               Logging.             (line   6)
* Logging, disabling:                    Disabling Logging.   (line   6)
* Looking up breakpoints:                Looking up Breakpoints.
                                                              (line   6)
* Looking up items:                      Tool Bar.            (line  38)
* Lookups, redoing:                      Looking up Previous Locations.
                                                              (line   6)
* Lookups, undoing:                      Looking up Previous Locations.
                                                              (line   6)
* Lütkehaus, Dorothea <1>:               History.             (line  13)
* Lütkehaus, Dorothea:                   Contributors.        (line   6)
* Machine code window:                   Windows.             (line  26)
* Machine code, examining:               Machine Code.        (line   6)
* Machine code, executing:               Machine Code Execution.
                                                              (line   6)
* Mailing list:                          Help and Assistance. (line   6)
* Make, invoking:                        Recompiling.         (line   6)
* Manual, showing on standard output:    Options.             (line 240)
* Memory, dumping contents:              Examining Data.      (line  29)
* Memory, examining:                     Examining Memory.    (line   6)
* Modula-2:                              Summary.             (line  30)
* Modula-3:                              Summary.             (line  30)
* Mouse pointer, frozen:                 Stopping X Programs. (line   6)
* Name, display:                         Selecting Displays.  (line   6)
* News, showing on standard output:      Options.             (line 246)
* NORA:                                  History.             (line  13)
* Optimized code, debugging:             Compiling for Debugging.
                                                              (line  24)
* Option:                                Invoking.            (line  29)
* Outermost frame:                       Frames.              (line  12)
* Output of the debugged program:        Input/Output.        (line   6)
* Pascal:                                Summary.             (line  30)
* Pasting displays:                      Deleting Displays.   (line  40)
* Patching:                              Patching.            (line   6)
* PDF manual:                            About this Manual.   (line  26)
* Perl:                                  Summary.             (line  62)
* Perl, invoking DDD with:               Choosing an Inferior Debugger.
                                                              (line  22)
* PIC file, printing as:                 Printing the Graph.  (line  21)
* Pipe:                                  Input/Output.        (line  12)
* Placement:                             Placement.           (line   6)
* Plot appearance:                       Plot Appearance.     (line   6)
* Plot, animating:                       Animating Plots.     (line   6)
* Plot, exporting:                       Exporting Plot Data. (line   6)
* Plot, printing:                        Printing Plots.      (line   6)
* Plot, scrolling:                       Plot Appearance.     (line  23)
* Plotting style:                        Plot Appearance.     (line  15)
* Plotting values <1>:                   Plotting Values.     (line   6)
* Plotting values <2>:                   Examining Data.      (line  23)
* Plotting values:                       Tool Bar.            (line  82)
* Pointers, dereferencing:               Dereferencing Pointers.
                                                              (line   6)
* Position, of display:                  Creating Single Displays.
                                                              (line  34)
* PostScript manual:                     About this Manual.   (line  18)
* PostScript, printing as:               Printing the Graph.  (line  19)
* Print, output formats:                 Printing Values.     (line  16)
* Printing plots:                        Printing Plots.      (line   6)
* Printing the Graph:                    Printing the Graph.  (line   6)
* Printing values <1>:                   Printing Values.     (line   6)
* Printing values:                       Examining Data.      (line  14)
* Printing values with Print:            Tool Bar.            (line  74)
* Process, attaching:                    Attaching to a Process.
                                                              (line   6)
* Program arguments:                     Starting Program Execution.
                                                              (line   6)
* Program counter, displaying:           Machine Code Execution.
                                                              (line  18)
* Program output, confusing:             Input/Output.        (line  21)
* Program, on remote host:               Remote Program.      (line   6)
* Program, opening:                      Opening Programs.    (line   6)
* Program, patching:                     Patching.            (line   6)
* PSG:                                   History.             (line   6)
* PYDB:                                  Summary.             (line  59)
* PYDB, invoking DDD with:               Choosing an Inferior Debugger.
                                                              (line  20)
* Python:                                Summary.             (line  59)
* Quitting:                              Quitting.            (line   6)
* Quotes in commands:                    Command Completion.  (line  60)
* Readline:                              TTY mode.            (line  18)
* Recompiling:                           Recompiling.         (line   6)
* Recording commands:                    GDB Simple Commands. (line  18)
* Redirecting I/O of the debugged program: Input/Output.      (line   6)
* Redirecting I/O to the execution window: Using the Execution Window.
                                                              (line   6)
* Redirection:                           Input/Output.        (line   6)
* Redirection, to execution window <1>:  Using the Execution Window.
                                                              (line  25)
* Redirection, to execution window:      Debugger Communication.
                                                              (line  69)
* Redoing commands:                      Undo and Redo.       (line   9)
* Redoing lookups:                       Looking up Previous Locations.
                                                              (line   6)
* Refreshing displayed values:           Refreshing the Data Window.
                                                              (line   6)
* Registers, examining:                  Registers.           (line   6)
* Reloading source code:                 Editing Source Code. (line  18)
* Remote debugger:                       Remote Debugger.     (line   6)
* Remote host:                           Remote Host.         (line   6)
* Remote program:                        Remote Program.      (line   6)
* Resource, setting when invoking DDD:   X Options.           (line  30)
* Resources:                             Resources.           (line   6)
* ROM code debugging:                    Hardware-Assisted Breakpoints.
                                                              (line  10)
* Rotating displays with Rotate:         Tool Bar.            (line  89)
* Rotating the graph:                    Rotating the Graph.  (line   6)
* Running the debugged program:          Running.             (line   6)
* Scalars, plotting:                     Scalars and Composites.
                                                              (line   6)
* Scales, in plots:                      Plot Appearance.     (line  18)
* Scrolling:                             Scrolling Data.      (line   6)
* Search, using Find >>:                 Tool Bar.            (line  42)
* Searching commands:                    Command History.     (line   6)
* Selecting frames:                      Selecting a frame.   (line   6)
* Selecting multiple displays:           Selecting Displays.  (line  20)
* Selecting single displays:             Selecting Displays.  (line  10)
* Session:                               Sessions.            (line   6)
* Session, active:                       Saving Sessions.     (line  45)
* Session, default:                      Resuming Sessions.   (line  10)
* Session, deleting:                     Deleting Sessions.   (line   6)
* Session, opening:                      Resuming Sessions.   (line   6)
* Session, resuming:                     Resuming Sessions.   (line   6)
* Session, saving:                       Saving Sessions.     (line   6)
* Session, setting when invoking DDD:    Options.             (line 400)
* Setting variables:                     Assignment.          (line   6)
* Setting variables with Set:            Tool Bar.            (line  93)
* Shared structures, detecting:          Shared Structures.   (line  12)
* Showing display details:               Showing and Hiding Details.
                                                              (line  10)
* SIGABRT signal <1>:                    Program Menu.        (line  76)
* SIGABRT signal:                        Quitting.            (line  17)
* SIGALRM signal:                        Signals.             (line   6)
* SIGINT signal <1>:                     Signals.             (line   6)
* SIGINT signal:                         Interrupting.        (line   6)
* Signal settings, editing:              Signals.             (line  26)
* Signal settings, saving:               Signals.             (line  80)
* Signal, fatal:                         Signals.             (line  14)
* Signal, sending to DDD:                Quitting.            (line  22)
* Signals:                               Signals.             (line   6)
* SIGSEGV signal:                        Signals.             (line   6)
* SIGTRAP signal:                        Signals.             (line  53)
* SIGUSR1 signal <1>:                    Debugging DDD.       (line  17)
* SIGUSR1 signal:                        Maintenance Menu.    (line  18)
* Source code, editing:                  Editing Source Code. (line   6)
* Source code, recompiling:              Recompiling.         (line   6)
* Source code, reloading:                Editing Source Code. (line  18)
* Source directory:                      Source Path.         (line   6)
* Source file, opening:                  Opening Source Files.
                                                              (line   6)
* Source file, typing into:              Typing in the Source Window.
                                                              (line   6)
* Source path:                           Source Path.         (line  14)
* Source path, specifying:               Source Path.         (line  26)
* Source window:                         Windows.             (line  12)
* Source, accessing:                     Source Path.         (line   6)
* Stack Frame:                           Frames.              (line   6)
* Stack frame:                           Stack.               (line   9)
* Stack, moving within:                  Selecting a frame.   (line   6)
* Status display:                        Displaying Program Status.
                                                              (line  11)
* Status line:                           Getting Help.        (line  16)
* Status line, location:                 Window Layout.       (line  50)
* Suppressing values:                    Deleting Displays.   (line  13)
* Tab width:                             Customizing Source Appearance.
                                                              (line  35)
* TeX file, printing as:                 Printing the Graph.  (line  21)
* TeXinfo manual:                        About this Manual.   (line  43)
* Theme, Data:                           Using Data Themes.   (line   6)
* Theme, editing:                        Editing Themes.      (line   6)
* Theme, for suppressing values:         Deleting Displays.   (line  13)
* Threads:                               Threads.             (line   6)
* Tic Tac Toe game:                      Maintenance Menu.    (line  22)
* Tip of the day:                        Getting Help.        (line  48)
* Tip of the day, turning off:           Tip of the day.      (line   6)
* Tip, on buttons:                       Getting Help.        (line   9)
* Tip, value <1>:                        Value Tips.          (line   6)
* Tip, value:                            Examining Data.      (line   8)
* Title, display:                        Selecting Displays.  (line   6)
* Tool Bar, location:                    Window Layout.       (line  23)
* Tool tip:                              Getting Help.        (line   9)
* Tornado:                               WindRiver GDB.       (line   6)
* TTY interface:                         TTY mode.            (line   6)
* TTY mode, setting when invoking DDD:   Options.             (line 461)
* TTY settings:                          Input/Output.        (line  38)
* Undo deleting displays:                Deleting Displays.   (line  37)
* Undo disabling displays:               Showing and Hiding Details.
                                                              (line  67)
* Undoing commands:                      Undo and Redo.       (line   6)
* Undoing frame changes:                 Selecting a frame.   (line  23)
* Undoing lookups:                       Looking up Previous Locations.
                                                              (line   6)
* Undoing program execution:             Undoing Program Execution.
                                                              (line   6)
* Undoing signal handling:               Signals.             (line  57)
* Updating displayed values:             Refreshing the Data Window.
                                                              (line   6)
* User-defined command:                  Defining Commands.   (line   6)
* Value tip <1>:                         Value Tips.          (line   6)
* Value tip:                             Examining Data.      (line   8)
* Value, display:                        Selecting Displays.  (line   6)
* Value, displaying <1>:                 Displaying Values.   (line   6)
* Value, displaying:                     Examining Data.      (line  18)
* Value, dumping:                        Examining Data.      (line  29)
* Value, plotting:                       Examining Data.      (line  23)
* Value, plotting the history:           Plotting Histories.  (line   6)
* Value, printing <1>:                   Printing Values.     (line   6)
* Value, printing:                       Examining Data.      (line  14)
* Values, displaying with Display:       Tool Bar.            (line  78)
* Values, plotting:                      Plotting Values.     (line   6)
* Values, plotting with Plot:            Tool Bar.            (line  82)
* Values, printing with Print:           Tool Bar.            (line  74)
* Values, suppressing:                   Deleting Displays.   (line  13)
* Variables, setting:                    Assignment.          (line   6)
* Variables, setting with Set:           Tool Bar.            (line  93)
* virtual machine:                       JDB Options.         (line  13)
* VM:                                    JDB Options.         (line  13)
* VSL:                                   History.             (line  13)
* Watchpoint <1>:                        Watchpoints.         (line   6)
* Watchpoint:                            Stopping.            (line  23)
* Watchpoint properties:                 Editing Watchpoint Properties.
                                                              (line   6)
* Watchpoint, deleting:                  Deleting Watchpoints.
                                                              (line   6)
* Watchpoint, editing:                   Editing Watchpoint Properties.
                                                              (line   6)
* Watchpoint, setting:                   Setting Watchpoints. (line   6)
* Watchpoint, toggling:                  Tool Bar.            (line  60)
* Watchpoints, editing:                  Editing all Watchpoints.
                                                              (line   6)
* WDB:                                   WDB.                 (line   6)
* WDB, invoking DDD with <1>:            WDB.                 (line   9)
* WDB, invoking DDD with:                Choosing an Inferior Debugger.
                                                              (line  37)
* WildeBeest:                            WDB.                 (line   6)
* WindRiver GDB:                         WindRiver GDB.       (line   6)
* Working directory, of the debugged program: Working Directory.
                                                              (line   6)
* X programs, stopping:                  Stopping X Programs. (line   6)
* X server, frozen:                      Stopping X Programs. (line   6)
* X server, locked:                      Stopping X Programs. (line  25)
* X session:                             Resuming Sessions.   (line  41)
* X Warnings, suppressing:               X Warnings.          (line   6)
* XDB:                                   Summary.             (line  52)
* XDB, invoking DDD with:                Choosing an Inferior Debugger.
                                                              (line  43)
* XEmacs, integrating DDD:               Integrating DDD.     (line  39)
* XXGDB, integrating DDD:                Integrating DDD.     (line  53)
* Zeller, Andreas <1>:                   History.             (line   6)
* Zeller, Andreas:                       Contributors.        (line   6)




Local Variables:
coding: iso-8859-1
End:
